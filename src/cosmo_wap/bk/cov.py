import numpy as np

# get newtonian tree level covariances...

class COV:
    def N00(params,nbar,Ntri):
        k1,k2,k3,theta,Pk1,Pk2,Pk3,Pkd1,Pkd2,Pkd3,Pkdd1,Pkdd2,Pkdd3,d,K,C,f,D1,b1,b2,g2 = params
        
        cos = lambda x: np.cos(x)
        sin = lambda x: np.sin(x)
        
        expr = 4*np.pi*D1**6*Pk1*Pk2*Pk3*(45045*b1**6*k3**4 + 30030*b1**5*f*k1**2*k3**2 + 30030*b1**5*f*k2**2*k3**2 + 60060*b1**5*f*k3**4 + 9009*b1**4*f**2*k1**4 + 36036*b1**4*f**2*k1**2*k2**2 + 60060*b1**4*f**2*k1**2*k3**2 + 9009*b1**4*f**2*k2**4 + 60060*b1**4*f**2*k2**2*k3**2 + 42042*b1**4*f**2*k3**4 + 20592*b1**3*f**3*k1**4 + 5148*b1**3*f**3*k1**3*k2*cos(3*theta) + 92664*b1**3*f**3*k1**2*k2**2 + 51480*b1**3*f**3*k1**2*k3**2 + 5148*b1**3*f**3*k1*k2**3*cos(3*theta) + 10296*b1**3*f**3*k1*k2*k3**2*cos(3*theta) + 20592*b1**3*f**3*k2**4 + 51480*b1**3*f**3*k2**2*k3**2 + 15444*b1**3*f**3*k3**4 + 143*b1**2*f**4*k1**4*cos(4*theta) + 19019*b1**2*f**4*k1**4 + 14300*b1**2*f**4*k1**3*k2*cos(3*theta) + 3432*b1**2*f**4*k1**2*k2**2*cos(4*theta) + 96096*b1**2*f**4*k1**2*k2**2 + 572*b1**2*f**4*k1**2*k3**2*cos(4*theta) + 21736*b1**2*f**4*k1**2*k3**2 + 14300*b1**2*f**4*k1*k2**3*cos(3*theta) + 11440*b1**2*f**4*k1*k2*k3**2*cos(3*theta) + 143*b1**2*f**4*k2**4*cos(4*theta) + 19019*b1**2*f**4*k2**4 + 572*b1**2*f**4*k2**2*k3**2*cos(4*theta) + 21736*b1**2*f**4*k2**2*k3**2 + 143*b1**2*f**4*k3**4*cos(4*theta) + 2574*b1**2*f**4*k3**4 + 390*b1*f**5*k1**4*cos(4*theta) + 8450*b1*f**5*k1**4 + 11960*b1*f**5*k1**3*k2*cos(3*theta) + 260*b1*f**5*k1**3*k2*cos(5*theta) + 4680*b1*f**5*k1**2*k2**2*cos(4*theta) + 46800*b1*f**5*k1**2*k2**2 + 390*b1*f**5*k1**2*k3**2*cos(4*theta) + 3900*b1*f**5*k1**2*k3**2 + 11960*b1*f**5*k1*k2**3*cos(3*theta) + 260*b1*f**5*k1*k2**3*cos(5*theta) + 3250*b1*f**5*k1*k2*k3**2*cos(3*theta) + 130*b1*f**5*k1*k2*k3**2*cos(5*theta) + 390*b1*f**5*k2**4*cos(4*theta) + 8450*b1*f**5*k2**4 + 390*b1*f**5*k2**2*k3**2*cos(4*theta) + 3900*b1*f**5*k2**2*k3**2 + 210*f**6*k1**4*cos(4*theta) + 1575*f**6*k1**4 + 3150*f**6*k1**3*k2*cos(3*theta) + 210*f**6*k1**3*k2*cos(5*theta) + 1620*f**6*k1**2*k2**2*cos(4*theta) + 45*f**6*k1**2*k2**2*cos(6*theta) + 9000*f**6*k1**2*k2**2 + 3150*f**6*k1*k2**3*cos(3*theta) + 210*f**6*k1*k2**3*cos(5*theta) + 210*f**6*k2**4*cos(4*theta) + 1575*f**6*k2**4 + f**2*(6006*b1**4*(k1**2*(3*k2**2 + 2*k3**2) + 2*k3**2*(k2**2 + k3**2)) + 5148*b1**3*f*(k1**4 + k1**2*(12*k2**2 + 5*k3**2) + k2**4 + 5*k2**2*k3**2 + 2*k3**4) + 572*b1**2*f**2*(19*k1**4 + k1**2*(141*k2**2 + 31*k3**2) + 19*k2**4 + 31*k2**2*k3**2 + 4*k3**4) + 260*b1*f**3*(29*k1**4 + 15*k1**2*(12*k2**2 + k3**2) + 29*k2**4 + 15*k2**2*k3**2) + 15*f**4*(112*k1**4 + 675*k1**2*k2**2 + 112*k2**4))*cos(2*theta) + 4*f*k1*k2*(15015*b1**5*k3**2 + 9009*b1**4*f*(k1**2 + k2**2 + 4*k3**2) + 1287*b1**3*f**2*(19*k1**2 + 19*k2**2 + 28*k3**2) + 715*b1**2*f**3*(37*k1**2 + 37*k2**2 + 24*k3**2) + 325*b1*f**4*(41*k1**2 + 41*k2**2 + 10*k3**2) + 2625*f**5*(k1**2 + k2**2))*cos(theta))/(45045*Ntri*k3**4)
        return expr
    
    def N10(params,nbar,Ntri):
        k1,k2,k3,theta,Pk1,Pk2,Pk3,Pkd1,Pkd2,Pkd3,Pkdd1,Pkdd2,Pkdd3,d,K,C,f,D1,b1,b2,g2 = params
        
        cos = lambda x: np.cos(x)
        sin = lambda x: np.sin(x)
        
        expr = 4*np.pi*D1**6*Pk1*Pk2*Pk3*(15015*b1**6*k3**4 + 18018*b1**5*f*k1**2*k3**2 + 12012*b1**5*f*k2**2*k3**2 + 30030*b1**5*f*k3**4 + 6435*b1**4*f**2*k1**4 + 23166*b1**4*f**2*k1**2*k2**2 + 41184*b1**4*f**2*k1**2*k3**2 + 2574*b1**4*f**2*k1*k2**3*cos(3*theta) + 5148*b1**4*f**2*k1*k2*k3**2*cos(3*theta) + 3861*b1**4*f**2*k2**4 + 30888*b1**4*f**2*k2**2*k3**2 + 25740*b1**4*f**2*k3**4 + 15730*b1**3*f**3*k1**4 + 5720*b1**3*f**3*k1**3*k2*cos(3*theta) + 1716*b1**3*f**3*k1**2*k2**2*cos(4*theta) + 65208*b1**3*f**3*k1**2*k2**2 + 286*b1**3*f**3*k1**2*k3**2*cos(4*theta) + 38038*b1**3*f**3*k1**2*k3**2 + 11440*b1**3*f**3*k1*k2**3*cos(3*theta) + 14300*b1**3*f**3*k1*k2*k3**2*cos(3*theta) + 286*b1**3*f**3*k2**4*cos(4*theta) + 10868*b1**3*f**3*k2**4 + 1144*b1**3*f**3*k2**2*k3**2*cos(4*theta) + 32032*b1**3*f**3*k2**2*k3**2 + 286*b1**3*f**3*k3**4*cos(4*theta) + 10868*b1**3*f**3*k3**4 + 195*b1**2*f**4*k1**4*cos(4*theta) + 15145*b1**2*f**4*k1**4 + 14170*b1**2*f**4*k1**3*k2*cos(3*theta) + 130*b1**2*f**4*k1**3*k2*cos(5*theta) + 5850*b1**2*f**4*k1**2*k2**2*cos(4*theta) + 72150*b1**2*f**4*k1**2*k2**2 + 780*b1**2*f**4*k1**2*k3**2*cos(4*theta) + 16900*b1**2*f**4*k1**2*k3**2 + 18460*b1**2*f**4*k1*k2**3*cos(3*theta) + 520*b1**2*f**4*k1*k2**3*cos(5*theta) + 11960*b1**2*f**4*k1*k2*k3**2*cos(3*theta) + 260*b1**2*f**4*k1*k2*k3**2*cos(5*theta) + 975*b1**2*f**4*k2**4*cos(4*theta) + 12025*b1**2*f**4*k2**4 + 1560*b1**2*f**4*k2**2*k3**2*cos(4*theta) + 15600*b1**2*f**4*k2**2*k3**2 + 195*b1**2*f**4*k3**4*cos(4*theta) + 1950*b1**2*f**4*k3**4 + 420*b1*f**5*k1**4*cos(4*theta) + 6930*b1*f**5*k1**4 + 11340*b1*f**5*k1**3*k2*cos(3*theta) + 420*b1*f**5*k1**3*k2*cos(5*theta) + 5760*b1*f**5*k1**2*k2**2*cos(4*theta) + 90*b1*f**5*k1**2*k2**2*cos(6*theta) + 36900*b1*f**5*k1**2*k2**2 + 420*b1*f**5*k1**2*k3**2*cos(4*theta) + 3150*b1*f**5*k1**2*k3**2 + 12600*b1*f**5*k1*k2**3*cos(3*theta) + 840*b1*f**5*k1*k2**3*cos(5*theta) + 3150*b1*f**5*k1*k2*k3**2*cos(3*theta) + 210*b1*f**5*k1*k2*k3**2*cos(5*theta) + 960*b1*f**5*k2**4*cos(4*theta) + 15*b1*f**5*k2**4*cos(6*theta) + 6150*b1*f**5*k2**4 + 540*b1*f**5*k2**2*k3**2*cos(4*theta) + 15*b1*f**5*k2**2*k3**2*cos(6*theta) + 3000*b1*f**5*k2**2*k3**2 + 210*f**6*k1**4*cos(4*theta) + 1323*f**6*k1**4 + 2940*f**6*k1**3*k2*cos(3*theta) + 252*f**6*k1**3*k2*cos(5*theta) + 1764*f**6*k1**2*k2**2*cos(4*theta) + 84*f**6*k1**2*k2**2*cos(6*theta) + 7350*f**6*k1**2*k2**2 + 3087*f**6*k1*k2**3*cos(3*theta) + 343*f**6*k1*k2**3*cos(5*theta) + 7*f**6*k1*k2**3*cos(7*theta) + 294*f**6*k2**4*cos(4*theta) + 14*f**6*k2**4*cos(6*theta) + 1225*f**6*k2**4 + f*k1*k2*(36036*b1**5*k3**2 + 2574*b1**4*f*(10*k1**2 + 9*k2**2 + 38*k3**2) + 2860*b1**3*f**2*(26*k1**2 + 24*k2**2 + 37*k3**2) + 260*b1**2*f**3*(323*k1**2 + 305*k2**2 + 205*k3**2) + 420*b1*f**4*(104*k1**2 + 100*k2**2 + 25*k3**2) + 245*f**5*(36*k1**2 + 35*k2**2))*cos(theta) + f*(6006*b1**5*k3**2*(k2**2 + k3**2) + 2574*b1**4*f*(k1**2*(6*k2**2 + 4*k3**2) + k2**4 + 8*k2**2*k3**2 + 5*k3**4) + 286*b1**3*f**2*(15*k1**4 + 2*k1**2*(93*k2**2 + 38*k3**2) + 31*k2**4 + 94*k2**2*k3**2 + 31*k3**4) + 130*b1**2*f**3*(71*k1**4 + 2*k1**2*(267*k2**2 + 58*k3**2) + 89*k2**4 + 120*k2**2*k3**2 + 15*k3**4) + 15*b1*f**4*(434*k1**4 + k1**2*(2694*k2**2 + 224*k3**2) + 449*k2**4 + 225*k2**2*k3**2) + 1470*f**5*(k1**4 + 6*k1**2*k2**2 + k2**4))*cos(2*theta))/(15015*Ntri*k3**4)

        return expr
    
    def N11(params,nbar,Ntri):
        k1,k2,k3,theta,Pk1,Pk2,Pk3,Pkd1,Pkd2,Pkd3,Pkdd1,Pkdd2,Pkdd3,d,K,C,f,D1,b1,b2,g2 = params
        
        cos = lambda x: np.cos(x)
        sin = lambda x: np.sin(x)
        
        expr = 2*np.pi*(D1**2*Pk1*nbar*(D1**2*Pk2*nbar*(D1**2*Pk3*nbar*(30030*b1**6*k3**4 + 12012*b1**5*f*k1**2*k3**2 + 18018*b1**5*f*k2**2*k3**2 + 30030*b1**5*f*k3**4 + 2574*b1**4*f**2*k1**4 + 12870*b1**4*f**2*k1**2*k2**2 + 18876*b1**4*f**2*k1**2*k3**2 - 2574*b1**4*f**2*k1*k2**3*cos(3*theta) - 5148*b1**4*f**2*k1*k2*k3**2*cos(3*theta) + 5148*b1**4*f**2*k2**4 + 29172*b1**4*f**2*k2**2*k3**2 + 16302*b1**4*f**2*k3**4 + 4862*b1**3*f**3*k1**4 - 572*b1**3*f**3*k1**3*k2*cos(3*theta) - 1716*b1**3*f**3*k1**2*k2**2*cos(4*theta) + 27456*b1**3*f**3*k1**2*k2**2 - 286*b1**3*f**3*k1**2*k3**2*cos(4*theta) + 13442*b1**3*f**3*k1**2*k3**2 - 6292*b1**3*f**3*k1*k2**3*cos(3*theta) - 4004*b1**3*f**3*k1*k2*k3**2*cos(3*theta) - 286*b1**3*f**3*k2**4*cos(4*theta) + 9724*b1**3*f**3*k2**4 - 1144*b1**3*f**3*k2**2*k3**2*cos(4*theta) + 19448*b1**3*f**3*k2**2*k3**2 - 286*b1**3*f**3*k3**4*cos(4*theta) + 4576*b1**3*f**3*k3**4 - 52*b1**2*f**4*k1**4*cos(4*theta) + 3874*b1**2*f**4*k1**4 + 130*b1**2*f**4*k1**3*k2*cos(3*theta) - 130*b1**2*f**4*k1**3*k2*cos(5*theta) - 2418*b1**2*f**4*k1**2*k2**2*cos(4*theta) + 23946*b1**2*f**4*k1**2*k2**2 - 208*b1**2*f**4*k1**2*k3**2*cos(4*theta) + 4836*b1**2*f**4*k1**2*k3**2 - 4160*b1**2*f**4*k1*k2**3*cos(3*theta) - 520*b1**2*f**4*k1*k2**3*cos(5*theta) - 520*b1**2*f**4*k1*k2*k3**2*cos(3*theta) - 260*b1**2*f**4*k1*k2*k3**2*cos(5*theta) - 832*b1**2*f**4*k2**4*cos(4*theta) + 6994*b1**2*f**4*k2**4 - 988*b1**2*f**4*k2**2*k3**2*cos(4*theta) + 6136*b1**2*f**4*k2**2*k3**2 - 52*b1**2*f**4*k3**4*cos(4*theta) + 624*b1**2*f**4*k3**4 - 30*b1*f**5*k1**4*cos(4*theta) + 1520*b1*f**5*k1**4 + 620*b1*f**5*k1**3*k2*cos(3*theta) - 160*b1*f**5*k1**3*k2*cos(5*theta) - 1080*b1*f**5*k1**2*k2**2*cos(4*theta) - 90*b1*f**5*k1**2*k2**2*cos(6*theta) + 9900*b1*f**5*k1**2*k2**2 - 30*b1*f**5*k1**2*k3**2*cos(4*theta) + 750*b1*f**5*k1**2*k3**2 - 640*b1*f**5*k1*k2**3*cos(3*theta) - 580*b1*f**5*k1*k2**3*cos(5*theta) + 100*b1*f**5*k1*k2*k3**2*cos(3*theta) - 80*b1*f**5*k1*k2*k3**2*cos(5*theta) - 570*b1*f**5*k2**4*cos(4*theta) - 15*b1*f**5*k2**4*cos(6*theta) + 2300*b1*f**5*k2**4 - 150*b1*f**5*k2**2*k3**2*cos(4*theta) - 15*b1*f**5*k2**2*k3**2*cos(6*theta) + 900*b1*f**5*k2**2*k3**2 + 252*f**6*k1**4 + 210*f**6*k1**3*k2*cos(3*theta) - 42*f**6*k1**3*k2*cos(5*theta) - 144*f**6*k1**2*k2**2*cos(4*theta) - 39*f**6*k1**2*k2**2*cos(6*theta) + 1650*f**6*k1**2*k2**2 + 63*f**6*k1*k2**3*cos(3*theta) - 133*f**6*k1*k2**3*cos(5*theta) - 7*f**6*k1*k2**3*cos(7*theta) - 84*f**6*k2**4*cos(4*theta) - 14*f**6*k2**4*cos(6*theta) + 350*f**6*k2**4 + f*k1*k2*(24024*b1**5*k3**2 + 2574*b1**4*f*(4*k1**2 + 5*k2**2 + 18*k3**2) + 572*b1**3*f**2*(41*k1**2 + 51*k2**2 + 67*k3**2) + 260*b1**2*f**3*(84*k1**2 + 102*k2**2 + 59*k3**2) + 20*b1*f**4*(481*k1**2 + 565*k2**2 + 125*k3**2) + 35*f**5*(48*k1**2 + 55*k2**2))*cos(theta) + f*(-6006*b1**5*k3**2*(k2**2 + k3**2) - 858*b1**4*f*(-k1**2*(3*k2**2 + 2*k3**2) + 3*k2**4 + 10*k2**2*k3**2 + k3**4) + 286*b1**3*f**2*(3*k1**4 + 2*k1**2*(15*k2**2 + 7*k3**2) - 13*k2**4 - 4*k2**2*k3**2 + 5*k3**4) + 26*b1**2*f**3*(63*k1**4 + 6*k1**2*(72*k2**2 + 17*k3**2) - 27*k2**4 + 82*k2**2*k3**2 + 13*k3**4) + 5*b1*f**4*(206*k1**4 + 18*k1**2*(71*k2**2 + 6*k3**2) + 7*k2**2*(23*k2**2 + 15*k3**2)) + 15*f**5*(14*k1**4 + 87*k1**2*k2**2 + 14*k2**4))*cos(2*theta)) + 26*k3**4*(1155*b1**4 + 1155*b1**3*f + 627*b1**2*f**2 + 176*b1*f**3 + 24*f**4 - f**3*(11*b1 + 2*f)*cos(4*theta) + f*(-231*b1**3 - 33*b1**2*f + 55*b1*f**2 + 13*f**3)*cos(2*theta))) + 26*D1**2*Pk3*nbar*(1155*b1**4*k3**4 + 462*b1**3*f*k1**2*k3**2 + 693*b1**3*f*k2**2*k3**2 + 462*b1**3*f*k3**4 + 99*b1**2*f**2*k1**4 + 495*b1**2*f**2*k1**2*k2**2 + 396*b1**2*f**2*k1**2*k3**2 - 99*b1**2*f**2*k1*k2**3*cos(3*theta) + 198*b1**2*f**2*k2**4 + 330*b1**2*f**2*k2**2*k3**2 + 99*b1**2*f**2*k3**4 + 110*b1*f**3*k1**4 + 462*b1*f**3*k1**2*k2**2 + 110*b1*f**3*k1**2*k3**2 - 22*b1*f**3*k1*k2**3*cos(3*theta) - 11*b1*f**3*k2**4*cos(4*theta) + 99*b1*f**3*k2**4 + 77*b1*f**3*k2**2*k3**2 + 35*f**4*k1**4 + 135*f**4*k1**2*k2**2 + 5*f**4*k1*k2**3*cos(3*theta) - 2*f**4*k2**4*cos(4*theta) + 24*f**4*k2**4 + f*k1*k2*(924*b1**3*k3**2 + 99*b1**2*f*(4*k1**2 + 5*k2**2 + 8*k3**2) + 22*b1*f**2*(20*k1**2 + 21*k2**2 + 10*k3**2) + 5*f**3*(28*k1**2 + 27*k2**2))*cos(theta) + f*k2**2*(-231*b1**3*k3**2 + 33*b1**2*f*(3*k1**2 - 3*k2**2 + 2*k3**2) + 11*b1*f**2*(18*k1**2 + 2*k2**2 + 3*k3**2) + f**3*(75*k1**2 + 13*k2**2))*cos(2*theta)) + 26*k3**4*(1155*b1**2 + 462*b1*f + 99*f**2)) + 26*D1**2*Pk2*nbar*(D1**2*Pk3*nbar*(1155*b1**4*k3**4 + 462*b1**3*f*k1**2*k3**2 + 693*b1**3*f*k2**2*k3**2 + 693*b1**3*f*k3**4 + 99*b1**2*f**2*k1**4 + 495*b1**2*f**2*k1**2*k2**2 + 330*b1**2*f**2*k1**2*k3**2 - 99*b1**2*f**2*k1*k2**3*cos(3*theta) - 198*b1**2*f**2*k1*k2*k3**2*cos(3*theta) + 198*b1**2*f**2*k2**4 + 792*b1**2*f**2*k2**2*k3**2 + 198*b1**2*f**2*k3**4 + 77*b1*f**3*k1**4 - 22*b1*f**3*k1**3*k2*cos(3*theta) - 66*b1*f**3*k1**2*k2**2*cos(4*theta) + 594*b1*f**3*k1**2*k2**2 - 11*b1*f**3*k1**2*k3**2*cos(4*theta) + 99*b1*f**3*k1**2*k3**2 - 220*b1*f**3*k1*k2**3*cos(3*theta) - 110*b1*f**3*k1*k2*k3**2*cos(3*theta) + 275*b1*f**3*k2**4 + 275*b1*f**3*k2**2*k3**2 - 2*f**4*k1**4*cos(4*theta) + 24*f**4*k1**4 - 15*f**4*k1**3*k2*cos(3*theta) - 5*f**4*k1**3*k2*cos(5*theta) - 45*f**4*k1**2*k2**2*cos(4*theta) + 210*f**4*k1**2*k2**2 - 105*f**4*k1*k2**3*cos(3*theta) + 105*f**4*k2**4 + f*k1*k2*(924*b1**3*k3**2 + 99*b1**2*f*(4*k1**2 + 5*k2**2 + 10*k3**2) + 66*b1*f**2*(7*k1**2 + 10*k2**2 + 5*k3**2) + 5*f**3*(32*k1**2 + 49*k2**2))*cos(theta) + f*(-231*b1**3*k3**2*(k2**2 + k3**2) + 33*b1**2*f*(k1**2*(3*k2**2 + 2*k3**2) - 3*k2**4 - 12*k2**2*k3**2 - 3*k3**4) + 11*b1*f**2*(3*k1**4 + 2*k1**2*(6*k2**2 + k3**2) - 15*k2**2*(k2**2 + k3**2)) + f**3*(13*k1**4 + 45*k1**2*k2**2 - 70*k2**4))*cos(2*theta)) + 33*k3**4*(35*b1**2 + 21*b1*f + 6*f**2 - f*(7*b1 + 3*f)*cos(2*theta))) + 858*D1**2*Pk3*nbar*(35*b1**2*k3**4 + 14*b1*f*k1**2*k3**2 + 21*b1*f*k2**2*k3**2 + 3*f**2*k1**4 + 15*f**2*k1**2*k2**2 - 3*f**2*k1*k2**3*cos(3*theta) + 6*f**2*k2**4 + f*k1*k2*(28*b1*k3**2 + 3*f*(4*k1**2 + 5*k2**2))*cos(theta) + f*k2**2*(-7*b1*k3**2 + 3*f*k1**2 - 3*f*k2**2)*cos(2*theta)) + 30030*k3**4)/(15015*Ntri*k3**4*nbar**3)
        return expr
    
    def N30(params,nbar,Ntri):
        k1,k2,k3,theta,Pk1,Pk2,Pk3,Pkd1,Pkd2,Pkd3,Pkdd1,Pkdd2,Pkdd3,d,K,C,f,D1,b1,b2,g2 = params
        
        cos = lambda x: np.cos(x)
        sin = lambda x: np.sin(x)
        
        expr = np.pi*D1**6*Pk1*Pk2*Pk3*(8314020*b1**6*k3**4 + 8498776*b1**5*f*k1**2*k3**2 + 6281704*b1**5*f*k2**2*k3**2 + 14780480*b1**5*f*k3**4 + 3275220*b1**4*f**2*k1**4 + 11286912*b1**4*f**2*k1**2*k2**2 + 20625488*b1**4*f**2*k1**2*k3**2 + 1813968*b1**4*f**2*k1*k2**3*cos(3*theta) + 3627936*b1**4*f**2*k1*k2*k3**2*cos(3*theta) + 188955*b1**4*f**2*k2**4*cos(4*theta) + 2028117*b1**4*f**2*k2**4 + 755820*b1**4*f**2*k2**2*k3**2*cos(4*theta) + 15637076*b1**4*f**2*k2**2*k3**2 + 188955*b1**4*f**2*k3**4*cos(4*theta) + 12827945*b1**4*f**2*k3**4 + 8759760*b1**3*f**3*k1**4 + 4418640*b1**3*f**3*k1**3*k2*cos(3*theta) + 2662812*b1**3*f**3*k1**2*k2**2*cos(4*theta) + 34035156*b1**3*f**3*k1**2*k2**2 + 443802*b1**3*f**3*k1**2*k3**2*cos(4*theta) + 20556366*b1**3*f**3*k1**2*k3**2 + 8934180*b1**3*f**3*k1*k2**3*cos(3*theta) + 872100*b1**3*f**3*k1*k2**3*cos(5*theta) + 11095050*b1**3*f**3*k1*k2*k3**2*cos(3*theta) + 436050*b1**3*f**3*k1*k2*k3**2*cos(5*theta) + 1025202*b1**3*f**3*k2**4*cos(4*theta) + 121125*b1**3*f**3*k2**4*cos(6*theta) + 5672526*b1**3*f**3*k2**4 + 2356608*b1**3*f**3*k2**2*k3**2*cos(4*theta) + 121125*b1**3*f**3*k2**2*k3**2*cos(6*theta) + 16566024*b1**3*f**3*k2**2*k3**2 + 443802*b1**3*f**3*k3**4*cos(4*theta) + 5672526*b1**3*f**3*k3**4 + 227715*b1**2*f**4*k1**4*cos(4*theta) + 9094065*b1**2*f**4*k1**4 + 11346990*b1**2*f**4*k1**3*k2*cos(3*theta) + 377910*b1**2*f**4*k1**3*k2*cos(5*theta) + 7412850*b1**2*f**4*k1**2*k2**2*cos(4*theta) + 242250*b1**2*f**4*k1**2*k2**2*cos(6*theta) + 40455750*b1**2*f**4*k1**2*k2**2 + 910860*b1**2*f**4*k1**2*k3**2*cos(4*theta) + 9786900*b1**2*f**4*k1**2*k3**2 + 15169695*b1**2*f**4*k1*k2**3*cos(3*theta) + 2246465*b1**2*f**4*k1*k2**3*cos(5*theta) + 56525*b1**2*f**4*k1*k2**3*cos(7*theta) + 9670620*b1**2*f**4*k1*k2*k3**2*cos(3*theta) + 755820*b1**2*f**4*k1*k2*k3**2*cos(5*theta) + 1865325*b1**2*f**4*k2**4*cos(4*theta) + 274550*b1**2*f**4*k2**4*cos(6*theta) + 6435775*b1**2*f**4*k2**4 + 2209320*b1**2*f**4*k2**2*k3**2*cos(4*theta) + 161500*b1**2*f**4*k2**2*k3**2*cos(6*theta) + 8462600*b1**2*f**4*k2**2*k3**2 + 227715*b1**2*f**4*k3**4*cos(4*theta) + 1090125*b1**2*f**4*k3**4 + 442890*b1*f**5*k1**4*cos(4*theta) + 4424910*b1*f**5*k1**4 + 9344580*b1*f**5*k1**3*k2*cos(3*theta) + 726180*b1*f**5*k1**3*k2*cos(5*theta) + 6617700*b1*f**5*k1**2*k2**2*cos(4*theta) + 429210*b1*f**5*k1**2*k2**2*cos(6*theta) + 22137660*b1*f**5*k1**2*k2**2 + 442890*b1*f**5*k1**2*k3**2*cos(4*theta) + 1951110*b1*f**5*k1**2*k3**2 + 10637340*b1*f**5*k1*k2**3*cos(3*theta) + 2002980*b1*f**5*k1*k2**3*cos(5*theta) + 103740*b1*f**5*k1*k2**3*cos(7*theta) + 2613450*b1*f**5*k1*k2*k3**2*cos(3*theta) + 363090*b1*f**5*k1*k2*k3**2*cos(5*theta) + 1396880*b1*f**5*k2**4*cos(4*theta) + 225815*b1*f**5*k2**4*cos(6*theta) + 6650*b1*f**5*k2**4*cos(8*theta) + 3447550*b1*f**5*k2**4 + 660060*b1*f**5*k2**2*k3**2*cos(4*theta) + 71535*b1*f**5*k2**2*k3**2*cos(6*theta) + 1738500*b1*f**5*k2**2*k3**2 + 211995*f**6*k1**4*cos(4*theta) + 893781*f**6*k1**4 + 2482830*f**6*k1**3*k2*cos(3*theta) + 351414*f**6*k1**3*k2*cos(5*theta) + 1924398*f**6*k1**2*k2**2*cos(4*theta) + 206388*f**6*k1**2*k2**2*cos(6*theta) + 4696650*f**6*k1**2*k2**2 + 2649969*f**6*k1*k2**3*cos(3*theta) + 613431*f**6*k1*k2**3*cos(5*theta) + 49959*f**6*k1*k2**3*cos(7*theta) + 372498*f**6*k2**4*cos(4*theta) + 68838*f**6*k2**4*cos(6*theta) + 3885*f**6*k2**4*cos(8*theta) + 731325*f**6*k2**4 + f*k1*k2*(16997552*b1**5*k3**2 + 201552*b1**4*f*(65*k1**2 + 56*k2**2 + 242*k3**2) + 19380*b1**3*f**2*(2124*k1**2 + 1846*k2**2 + 2933*k3**2) + 1615*b1**2*f**3*(31044*k1**2 + 27485*k2**2 + 19080*k3**2) + 39900*b1*f**4*(698*k1**2 + 631*k2**2 + 163*k3**2) + 315*f**5*(18916*k1**2 + 17395*k2**2))*cos(theta) + f*(2217072*b1**5*k3**2*(k2**2 + k3**2) + 16796*b1**4*f*(166*k1**2*(3*k2**2 + 2*k3**2) + 63*k2**4 + 584*k2**2*k3**2 + 395*k3**4) + 969*b1**3*f**2*(2720*k1**4 + 72*k1**2*(454*k2**2 + 189*k3**2) + 4723*k2**4 + 15627*k2**2*k3**2 + 5448*k3**4) + 9690*b1**2*f**3*(634*k1**4 + k1**2*(4611*k2**2 + 1024*k3**2) + 711*k2**4 + 1010*k2**2*k3**2 + 130*k3**4) + 95*b1*f**4*(48552*k1**4 + 18*k1**2*(16197*k2**2 + 1372*k3**2) + 46351*k2**4 + 23895*k2**2*k3**2) + 210*f**5*(5202*k1**4 + 30294*k1**2*k2**2 + 4865*k2**4))*cos(2*theta))/(2078505*Ntri*k3**4)
        return expr
    
    def N31(params,nbar,Ntri):
        k1,k2,k3,theta,Pk1,Pk2,Pk3,Pkd1,Pkd2,Pkd3,Pkdd1,Pkdd2,Pkdd3,d,K,C,f,D1,b1,b2,g2 = params
        
        cos = lambda x: np.cos(x)
        sin = lambda x: np.sin(x)
        
        expr = np.pi*(D1**2*Pk1*nbar*(D1**2*Pk2*nbar*(D1**2*Pk3*nbar*(11085360*b1**6*k3**4 + 10346336*b1**5*f*k1**2*k3**2 + 8129264*b1**5*f*k2**2*k3**2 + 18475600*b1**5*f*k3**4 + 3560752*b1**4*f**2*k1**4 + 13100880*b1**4*f**2*k1**2*k2**2 + 22976928*b1**4*f**2*k1**2*k3**2 + 1142128*b1**4*f**2*k1*k2**3*cos(3*theta) + 2284256*b1**4*f**2*k1*k2*k3**2*cos(3*theta) + 41990*b1**4*f**2*k2**4*cos(4*theta) + 2544594*b1**4*f**2*k2**4 + 167960*b1**4*f**2*k2**2*k3**2*cos(4*theta) + 18912296*b1**4*f**2*k2**2*k3**2 + 41990*b1**4*f**2*k3**4*cos(4*theta) + 14839266*b1**4*f**2*k3**4 + 8304976*b1**3*f**3*k1**4 + 2366944*b1**3*f**3*k1**3*k2*cos(3*theta) + 7752*b1**3*f**3*k1**2*k2**2*cos(4*theta) + 35651448*b1**3*f**3*k1**2*k2**2 + 1292*b1**3*f**3*k1**2*k3**2*cos(4*theta) + 20417476*b1**3*f**3*k1**2*k3**2 + 4653784*b1**3*f**3*k1*k2**3*cos(3*theta) - 452200*b1**3*f**3*k1*k2**3*cos(5*theta) + 5877308*b1**3*f**3*k1*k2*k3**2*cos(3*theta) - 226100*b1**3*f**3*k1*k2*k3**2*cos(5*theta) + 49742*b1**3*f**3*k2**4*cos(4*theta) - 121125*b1**3*f**3*k2**4*cos(6*theta) + 6554962*b1**3*f**3*k2**4 + 53618*b1**3*f**3*k2**2*k3**2*cos(4*theta) - 121125*b1**3*f**3*k2**2*k3**2*cos(6*theta) + 18210094*b1**3*f**3*k2**2*k3**2 + 1292*b1**3*f**3*k3**4*cos(4*theta) + 5941908*b1**3*f**3*k3**4 + 31654*b1**2*f**4*k1**4*cos(4*theta) + 7614402*b1**2*f**4*k1**4 + 5484540*b1**2*f**4*k1**3*k2*cos(3*theta) - 122740*b1**2*f**4*k1**3*k2*cos(5*theta) + 672486*b1**2*f**4*k1**2*k2**2*cos(4*theta) - 169575*b1**2*f**4*k1**2*k2**2*cos(6*theta) + 37870458*b1**2*f**4*k1**2*k2**2 + 126616*b1**2*f**4*k1**2*k3**2*cos(4*theta) + 8700328*b1**2*f**4*k1**2*k3**2 + 7030095*b1**2*f**4*k1*k2**3*cos(3*theta) - 886635*b1**2*f**4*k1*k2**3*cos(5*theta) - 56525*b1**2*f**4*k1*k2**3*cos(7*theta) + 4612440*b1**2*f**4*k1*k2*k3**2*cos(3*theta) - 245480*b1**2*f**4*k1*k2*k3**2*cos(5*theta) - 26486*b1**2*f**4*k2**4*cos(4*theta) - 226100*b1**2*f**4*k2**4*cos(6*theta) + 6716462*b1**2*f**4*k2**4 + 68476*b1**2*f**4*k2**2*k3**2*cos(4*theta) - 113050*b1**2*f**4*k2**2*k3**2*cos(6*theta) + 8345028*b1**2*f**4*k2**2*k3**2 + 31654*b1**2*f**4*k3**4*cos(4*theta) + 1025202*b1**2*f**4*k3**4 + 90060*b1*f**5*k1**4*cos(4*theta) + 3323860*b1*f**5*k1**4 + 4150360*b1*f**5*k1**3*k2*cos(3*theta) - 99560*b1*f**5*k1**3*k2*cos(5*theta) + 940500*b1*f**5*k1**2*k2**2*cos(4*theta) - 216030*b1*f**5*k1**2*k2**2*cos(6*theta) + 18521580*b1*f**5*k1**2*k2**2 + 90060*b1*f**5*k1**2*k3**2*cos(4*theta) + 1546980*b1*f**5*k1**2*k3**2 + 4553350*b1*f**5*k1*k2**3*cos(3*theta) - 539790*b1*f**5*k1*k2**3*cos(5*theta) - 81130*b1*f**5*k1*k2**3*cos(7*theta) + 1149500*b1*f**5*k1*k2*k3**2*cos(3*theta) - 49780*b1*f**5*k1*k2*k3**2*cos(5*theta) + 8170*b1*f**5*k2**4*cos(4*theta) - 145065*b1*f**5*k2**4*cos(6*theta) - 6650*b1*f**5*k2**4*cos(8*theta) + 3222400*b1*f**5*k2**4 + 66690*b1*f**5*k2**2*k3**2*cos(4*theta) - 36005*b1*f**5*k2**2*k3**2*cos(6*theta) + 1539950*b1*f**5*k2**2*k3**2 + 49350*f**6*k1**4*cos(4*theta) + 603666*f**6*k1**4 + 1024380*f**6*k1**3*k2*cos(3*theta) - 7476*f**6*k1**3*k2*cos(5*theta) + 332118*f**6*k1**2*k2**2*cos(4*theta) - 66567*f**6*k1**2*k2**2*cos(6*theta) + 3517050*f**6*k1**2*k2**2 + 1065519*f**6*k1*k2**3*cos(3*theta) - 96859*f**6*k1*k2**3*cos(5*theta) - 30541*f**6*k1*k2**3*cos(7*theta) + 26768*f**6*k2**4*cos(4*theta) - 35322*f**6*k2**4*cos(6*theta) - 3220*f**6*k2**4*cos(8*theta) + 615300*f**6*k2**4 + f*k1*k2*(20692672*b1**5*k3**2 + 67184*b1**4*f*(212*k1**2 + 195*k2**2 + 814*k3**2) + 2584*b1**3*f**2*(15244*k1**2 + 14534*k2**2 + 22053*k3**2) + 1615*b1**2*f**3*(26248*k1**2 + 25799*k2**2 + 17008*k3**2) + 190*b1*f**4*(110392*k1**2 + 111015*k2**2 + 27140*k3**2) + 35*f**5*(114984*k1**2 + 117235*k2**2))*cos(theta) + f*(2217072*b1**5*k3**2*(k2**2 + k3**2) + 33592*b1**4*f*(82*k1**2*(3*k2**2 + 2*k3**2) + 29*k2**4 + 280*k2**2*k3**2 + 193*k3**4) + 323*b1**3*f**2*(6608*k1**4 + 48*k1**2*(1740*k2**2 + 703*k3**2) + 12247*k2**4 + 40791*k2**2*k3**2 + 13920*k3**4) + 323*b1**2*f**3*(13288*k1**4 + k1**2*(102957*k2**2 + 21952*k3**2) + 16948*k2**4 + 23582*k2**2*k3**2 + 2888*k3**4) + 95*b1*f**4*(29920*k1**4 + 18*k1**2*(10697*k2**2 + 872*k3**2) + 33447*k2**4 + 16395*k2**2*k3**2) + 5*f**5*(121464*k1**4 + 755883*k1**2*k2**2 + 131362*k2**4))*cos(2*theta)) + 646*k3**4*(17160*b1**4 + 28600*b1**3*f + 22971*b1**2*f**2 + 9198*b1*f**3 + 1587*f**4 + f**2*(65*b1**2 + 2*b1*f + 49*f**2)*cos(4*theta) + 4*f*(858*b1**3 + 2509*b1**2*f + 1740*b1*f**2 + 361*f**3)*cos(2*theta))) + 646*D1**2*Pk3*nbar*(17160*b1**4*k3**4 + 16016*b1**3*f*k1**2*k3**2 + 12584*b1**3*f*k2**2*k3**2 + 16016*b1**3*f*k3**4 + 5512*b1**2*f**2*k1**4 + 20280*b1**2*f**2*k1**2*k2**2 + 22048*b1**2*f**2*k1**2*k3**2 + 1768*b1**2*f**2*k1*k2**3*cos(3*theta) + 65*b1**2*f**2*k2**4*cos(4*theta) + 3939*b1**2*f**2*k2**4 + 13520*b1**2*f**2*k2**2*k3**2 + 5512*b1**2*f**2*k3**4 + 8080*b1*f**3*k1**4 + 28656*b1*f**3*k1**2*k2**2 + 8080*b1*f**3*k1**2*k3**2 + 3664*b1*f**3*k1*k2**3*cos(3*theta) + 2*b1*f**3*k2**4*cos(4*theta) + 4422*b1*f**3*k2**4 + 4776*b1*f**3*k2**2*k3**2 + 3080*f**4*k1**4 + 10680*f**4*k1**2*k2**2 + 1640*f**4*k1*k2**3*cos(3*theta) + 49*f**4*k2**4*cos(4*theta) + 1587*f**4*k2**4 + 8*f*k1*k2*(4004*b1**3*k3**2 + 13*b1**2*f*(212*k1**2 + 195*k2**2 + 424*k3**2) + 2*b1*f**2*(2020*k1**2 + 1791*k2**2 + 1010*k3**2) + 5*f**3*(308*k1**2 + 267*k2**2))*cos(theta) + 4*f*k2**2*(858*b1**3*k3**2 + 13*b1**2*f*(246*k1**2 + 29*k2**2 + 164*k3**2) + 2*b1*f**2*(2478*k1**2 + 457*k2**2 + 413*k3**2) + f**3*(1950*k1**2 + 361*k2**2))*cos(2*theta)) + 646*k3**4*(17160*b1**2 + 16016*b1*f + 5512*f**2)) + 323*D1**2*Pk2*nbar*(D1**2*Pk3*nbar*(34320*b1**4*k3**4 + 32032*b1**3*f*k1**2*k3**2 + 25168*b1**3*f*k2**2*k3**2 + 25168*b1**3*f*k3**4 + 11024*b1**2*f**2*k1**4 + 40560*b1**2*f**2*k1**2*k2**2 + 27040*b1**2*f**2*k1**2*k3**2 + 3536*b1**2*f**2*k1*k2**3*cos(3*theta) + 7072*b1**2*f**2*k1*k2*k3**2*cos(3*theta) + 130*b1**2*f**2*k2**4*cos(4*theta) + 7878*b1**2*f**2*k2**4 + 520*b1**2*f**2*k2**2*k3**2*cos(4*theta) + 31512*b1**2*f**2*k2**2*k3**2 + 130*b1**2*f**2*k3**4*cos(4*theta) + 7878*b1**2*f**2*k3**4 + 9552*b1*f**3*k1**4 + 7328*b1*f**3*k1**3*k2*cos(3*theta) + 24*b1*f**3*k1**2*k2**2*cos(4*theta) + 53064*b1*f**3*k1**2*k2**2 + 4*b1*f**3*k1**2*k3**2*cos(4*theta) + 8844*b1*f**3*k1**2*k3**2 + 7080*b1*f**3*k1*k2**3*cos(3*theta) - 1400*b1*f**3*k1*k2**3*cos(5*theta) + 3540*b1*f**3*k1*k2*k3**2*cos(3*theta) - 700*b1*f**3*k1*k2*k3**2*cos(5*theta) + 150*b1*f**3*k2**4*cos(4*theta) - 375*b1*f**3*k2**4*cos(6*theta) + 11450*b1*f**3*k2**4 + 150*b1*f**3*k2**2*k3**2*cos(4*theta) - 375*b1*f**3*k2**2*k3**2*cos(6*theta) + 11450*b1*f**3*k2**2*k3**2 + 98*f**4*k1**4*cos(4*theta) + 3174*f**4*k1**4 + 3860*f**4*k1**3*k2*cos(3*theta) - 380*f**4*k1**3*k2*cos(5*theta) - 270*f**4*k1**2*k2**2*cos(4*theta) - 525*f**4*k1**2*k2**2*cos(6*theta) + 19710*f**4*k1**2*k2**2 + 3045*f**4*k1*k2**3*cos(3*theta) - 1225*f**4*k1*k2**3*cos(5*theta) - 175*f**4*k1*k2**3*cos(7*theta) - 350*f**4*k2**4*cos(6*theta) + 4480*f**4*k2**4 + f*k1*k2*(64064*b1**3*k3**2 + 208*b1**2*f*(212*k1**2 + 195*k2**2 + 390*k3**2) + 8*b1*f**2*(7164*k1**2 + 7370*k2**2 + 3685*k3**2) + 5*f**3*(4232*k1**2 + 4599*k2**2))*cos(theta) + f*(6864*b1**3*k3**2*(k2**2 + k3**2) + 104*b1**2*f*(82*k1**2*(3*k2**2 + 2*k3**2) + 29*k2**4 + 116*k2**2*k3**2 + 29*k3**4) + b1*f**2*(6608*k1**4 + 7312*k1**2*(6*k2**2 + k3**2) + 4935*k2**2*(k2**2 + k3**2)) + f**3*(2888*k1**4 + 18045*k1**2*k2**2 + 2030*k2**4))*cos(2*theta)) + 26*k3**4*(1320*b1**2 + 968*b1*f + 5*f**2*cos(4*theta) + 303*f**2 + 4*f*(66*b1 + 29*f)*cos(2*theta))) + 8398*D1**2*Pk3*nbar*(1320*b1**2*k3**4 + 1232*b1*f*k1**2*k3**2 + 968*b1*f*k2**2*k3**2 + 424*f**2*k1**4 + 1560*f**2*k1**2*k2**2 + 136*f**2*k1*k2**3*cos(3*theta) + 5*f**2*k2**4*cos(4*theta) + 303*f**2*k2**4 + 8*f*k1*k2*(308*b1*k3**2 + 212*f*k1**2 + 195*f*k2**2)*cos(theta) + 4*f*k2**2*(66*b1*k3**2 + 246*f*k1**2 + 29*f*k2**2)*cos(2*theta)) + 11085360*k3**4)/(2771340*Ntri*k3**4*nbar**3)
        return expr
    
    
    def N32(params,nbar,Ntri):
        k1,k2,k3,theta,Pk1,Pk2,Pk3,Pkd1,Pkd2,Pkd3,Pkdd1,Pkdd2,Pkdd3,d,K,C,f,D1,b1,b2,g2 = params
        
        cos = lambda x: np.cos(x)
        sin = lambda x: np.sin(x)
        
        expr = np.pi*(D1**2*Pk1*nbar*(D1**2*Pk2*nbar*(D1**2*Pk3*nbar*(1108536*b1**6*k3**4 + 739024*b1**5*f*k1**2*k3**2 + 739024*b1**5*f*k2**2*k3**2 + 1478048*b1**5*f*k3**4 + 167960*b1**4*f**2*k1**4 + 806208*b1**4*f**2*k1**2*k2**2 + 1209312*b1**4*f**2*k1**2*k3**2 - 134368*b1**4*f**2*k1*k2**3*cos(3*theta) - 268736*b1**4*f**2*k1*k2*k3**2*cos(3*theta) - 29393*b1**4*f**2*k2**4*cos(4*theta) + 214149*b1**4*f**2*k2**4 - 117572*b1**4*f**2*k2**2*k3**2*cos(4*theta) + 1394068*b1**4*f**2*k2**2*k3**2 - 29393*b1**4*f**2*k3**4*cos(4*theta) + 919581*b1**4*f**2*k3**4 + 310080*b1**3*f**3*k1**4 - 51680*b1**3*f**3*k1**3*k2*cos(3*theta) - 143412*b1**3*f**3*k1**2*k2**2*cos(4*theta) + 1740324*b1**3*f**3*k1**2*k2**2 - 23902*b1**3*f**3*k1**2*k3**2*cos(4*theta) + 858534*b1**3*f**3*k1**2*k3**2 - 368220*b1**3*f**3*k1*k2**3*cos(3*theta) - 32300*b1**3*f**3*k1*k2**3*cos(5*theta) - 261630*b1**3*f**3*k1*k2*k3**2*cos(3*theta) - 16150*b1**3*f**3*k1*k2*k3**2*cos(5*theta) - 101422*b1**3*f**3*k2**4*cos(4*theta) + 4845*b1**3*f**3*k2**4*cos(6*theta) + 458014*b1**3*f**3*k2**4 - 173128*b1**3*f**3*k2**2*k3**2*cos(4*theta) + 4845*b1**3*f**3*k2**2*k3**2*cos(6*theta) + 1069776*b1**3*f**3*k2**2*k3**2 - 23902*b1**3*f**3*k3**4*cos(4*theta) + 290054*b1**3*f**3*k3**4 - 4845*b1**2*f**4*k1**4*cos(4*theta) + 238697*b1**2*f**4*k1**4 - 35530*b1**2*f**4*k1**3*k2*cos(3*theta) - 12274*b1**2*f**4*k1**3*k2*cos(5*theta) - 215118*b1**2*f**4*k1**2*k2**2*cos(4*theta) - 1938*b1**2*f**4*k1**2*k2**2*cos(6*theta) + 1509702*b1**2*f**4*k1**2*k2**2 - 19380*b1**2*f**4*k1**2*k3**2*cos(4*theta) + 303620*b1**2*f**4*k1**2*k3**2 - 298129*b1**2*f**4*k1*k2**3*cos(3*theta) - 73967*b1**2*f**4*k1*k2**3*cos(5*theta) + 2261*b1**2*f**4*k1*k2**3*cos(7*theta) - 71060*b1**2*f**4*k1*k2*k3**2*cos(3*theta) - 24548*b1**2*f**4*k1*k2*k3**2*cos(5*theta) - 111435*b1**2*f**4*k2**4*cos(4*theta) + 3230*b1**2*f**4*k2**4*cos(6*theta) + 378879*b1**2*f**4*k2**4 - 85272*b1**2*f**4*k2**2*k3**2*cos(4*theta) - 1292*b1**2*f**4*k2**2*k3**2*cos(6*theta) + 385016*b1**2*f**4*k2**2*k3**2 - 4845*b1**2*f**4*k3**4*cos(4*theta) + 39729*b1**2*f**4*k3**4 - 3990*b1*f**5*k1**4*cos(4*theta) + 90174*b1*f**5*k1**4 + 4788*b1*f**5*k1**3*k2*cos(3*theta) - 14364*b1*f**5*k1**3*k2*cos(5*theta) - 107388*b1*f**5*k1**2*k2**2*cos(4*theta) - 7638*b1*f**5*k1**2*k2**2*cos(6*theta) + 612636*b1*f**5*k1**2*k2**2 - 3990*b1*f**5*k1**2*k3**2*cos(4*theta) + 45486*b1*f**5*k1**2*k3**2 - 84588*b1*f**5*k1*k2**3*cos(3*theta) - 53732*b1*f**5*k1*k2**3*cos(5*theta) + 532*b1*f**5*k1*k2**3*cos(7*theta) - 3990*b1*f**5*k1*k2*k3**2*cos(3*theta) - 7182*b1*f**5*k1*k2*k3**2*cos(5*theta) - 49552*b1*f**5*k2**4*cos(4*theta) - 2337*b1*f**5*k2**4*cos(6*theta) + 266*b1*f**5*k2**4*cos(8*theta) + 143070*b1*f**5*k2**4 - 13908*b1*f**5*k2**2*k3**2*cos(4*theta) - 1273*b1*f**5*k2**2*k3**2*cos(6*theta) + 56620*b1*f**5*k2**2*k3**2 - 777*f**6*k1**4*cos(4*theta) + 14301*f**6*k1**4 + 4830*f**6*k1**3*k2*cos(3*theta) - 4074*f**6*k1**3*k2*cos(5*theta) - 18018*f**6*k1**2*k2**2*cos(4*theta) - 3108*f**6*k1**2*k2**2*cos(6*theta) + 98490*f**6*k1**2*k2**2 - 6615*f**6*k1*k2**3*cos(3*theta) - 11809*f**6*k1*k2**3*cos(5*theta) - 385*f**6*k1*k2**3*cos(7*theta) - 7742*f**6*k2**4*cos(4*theta) - 1162*f**6*k2**4*cos(6*theta) + 49*f**6*k2**4*cos(8*theta) + 21805*f**6*k2**4 + f**2*(16796*b1**4*(4*k1**2*(3*k2**2 + 2*k3**2) - k2**4 + 4*k2**2*k3**2 + 7*k3**4) + 323*b1**3*f*(160*k1**4 + 8*k1**2*(222*k2**2 + 97*k3**2) + k2**4 + 569*k2**2*k3**2 + 296*k3**4) + 646*b1**2*f**2*(142*k1**4 + k1**2*(1023*k2**2 + 232*k3**2) + 85*k2**4 + 210*k2**2*k3**2 + 30*k3**4) + 19*b1*f**3*(2856*k1**4 + 18*k1**2*(1009*k2**2 + 84*k3**2) + 2579*k2**4 + 1515*k2**2*k3**2) + 14*f**4*(750*k1**4 + 4770*k1**2*k2**2 + 791*k2**4))*cos(2*theta) + f*k1*k2*(1478048*b1**5*k3**2 + 134368*b1**4*f*(5*k1**2 + 6*k2**2 + 22*k3**2) + 6460*b1**3*f**2*(232*k1**2 + 286*k2**2 + 379*k3**2) + 323*b1**2*f**3*(4180*k1**2 + 5177*k2**2 + 2984*k3**2) + 532*b1*f**4*(1074*k1**2 + 1315*k2**2 + 285*k3**2) + 35*f**5*(2724*k1**2 + 3283*k2**2))*cos(theta)) + 323*k3**4*(3432*b1**4 + 4576*b1**3*f + 2847*b1**2*f**2 + 898*b1*f**3 + 123*f**4 + 4*f**2*(91*b1**2 + 74*b1*f + 15*f**2)*cos(2*theta) - f**2*(91*b1**2 + 74*b1*f + 15*f**2)*cos(4*theta))) + 323*D1**2*Pk3*nbar*(3432*b1**4*k3**4 + 2288*b1**3*f*k1**2*k3**2 + 2288*b1**3*f*k2**2*k3**2 + 2288*b1**3*f*k3**4 + 520*b1**2*f**2*k1**4 + 2496*b1**2*f**2*k1**2*k2**2 + 2080*b1**2*f**2*k1**2*k3**2 - 416*b1**2*f**2*k1*k2**3*cos(3*theta) - 91*b1**2*f**2*k2**4*cos(4*theta) + 663*b1**2*f**2*k2**4 + 1664*b1**2*f**2*k2**2*k3**2 + 520*b1**2*f**2*k3**4 + 560*b1*f**3*k1**4 + 2400*b1*f**3*k1**2*k2**2 + 560*b1*f**3*k1**2*k3**2 - 160*b1*f**3*k1*k2**3*cos(3*theta) - 74*b1*f**3*k2**4*cos(4*theta) + 498*b1*f**3*k2**4 + 400*b1*f**3*k2**2*k3**2 + 168*f**4*k1**4 + 672*f**4*k1**2*k2**2 - 15*f**4*k2**4*cos(4*theta) + 123*f**4*k2**4 + 4*f**2*k2**2*(13*b1**2*(12*k1**2 - k2**2 + 8*k3**2) + 2*b1*f*(120*k1**2 + 17*k2**2 + 20*k3**2) + 3*f**2*(28*k1**2 + 5*k2**2))*cos(2*theta) + 32*f*k1*k2*(143*b1**3*k3**2 + 13*b1**2*f*(5*k1**2 + 6*k2**2 + 10*k3**2) + 5*b1*f**2*(14*k1**2 + 15*k2**2 + 7*k3**2) + 21*f**3*(k1**2 + k2**2))*cos(theta)) + 323*k3**4*(3432*b1**2 + 2288*b1*f + 520*f**2)) + 323*D1**2*Pk2*nbar*(D1**2*Pk3*nbar*(3432*b1**4*k3**4 + 2288*b1**3*f*k1**2*k3**2 + 2288*b1**3*f*k2**2*k3**2 + 2288*b1**3*f*k3**4 + 520*b1**2*f**2*k1**4 + 2496*b1**2*f**2*k1**2*k2**2 + 1664*b1**2*f**2*k1**2*k3**2 - 416*b1**2*f**2*k1*k2**3*cos(3*theta) - 832*b1**2*f**2*k1*k2*k3**2*cos(3*theta) - 91*b1**2*f**2*k2**4*cos(4*theta) + 663*b1**2*f**2*k2**4 - 364*b1**2*f**2*k2**2*k3**2*cos(4*theta) + 2652*b1**2*f**2*k2**2*k3**2 - 91*b1**2*f**2*k3**4*cos(4*theta) + 663*b1**2*f**2*k3**4 + 400*b1*f**3*k1**4 - 160*b1*f**3*k1**3*k2*cos(3*theta) - 444*b1*f**3*k1**2*k2**2*cos(4*theta) + 2988*b1*f**3*k1**2*k2**2 - 74*b1*f**3*k1**2*k3**2*cos(4*theta) + 498*b1*f**3*k1**2*k3**2 - 980*b1*f**3*k1*k2**3*cos(3*theta) - 100*b1*f**3*k1*k2**3*cos(5*theta) - 490*b1*f**3*k1*k2*k3**2*cos(3*theta) - 50*b1*f**3*k1*k2*k3**2*cos(5*theta) - 240*b1*f**3*k2**4*cos(4*theta) + 15*b1*f**3*k2**4*cos(6*theta) + 920*b1*f**3*k2**4 - 240*b1*f**3*k2**2*k3**2*cos(4*theta) + 15*b1*f**3*k2**2*k3**2*cos(6*theta) + 920*b1*f**3*k2**2*k3**2 - 15*f**4*k1**4*cos(4*theta) + 123*f**4*k1**4 - 110*f**4*k1**3*k2*cos(3*theta) - 38*f**4*k1**3*k2*cos(5*theta) - 306*f**4*k1**2*k2**2*cos(4*theta) - 6*f**4*k1**2*k2**2*cos(6*theta) + 1050*f**4*k1**2*k2**2 - 483*f**4*k1*k2**3*cos(3*theta) - 77*f**4*k1*k2**3*cos(5*theta) + 7*f**4*k1*k2**3*cos(7*theta) - 126*f**4*k2**4*cos(4*theta) + 14*f**4*k2**4*cos(6*theta) + 350*f**4*k2**4 + f**2*(-52*b1**2*(-4*k1**2*(3*k2**2 + 2*k3**2) + k2**4 + 4*k2**2*k3**2 + k3**4) + b1*f*(160*k1**4 + 136*k1**2*(6*k2**2 + k3**2) - 135*k2**2*(k2**2 + k3**2)) + 10*f**2*(6*k1**4 + 27*k1**2*k2**2 - 7*k2**4))*cos(2*theta) + f*k1*k2*(4576*b1**3*k3**2 + 416*b1**2*f*(5*k1**2 + 6*k2**2 + 12*k3**2) + 20*b1*f**2*(120*k1**2 + 166*k2**2 + 83*k3**2) + 5*f**3*(164*k1**2 + 245*k2**2))*cos(theta)) + 13*k3**4*(264*b1**2 + 176*b1*f - 4*f**2*cos(2*theta) - 7*f**2*cos(4*theta) + 51*f**2)) + 4199*D1**2*Pk3*nbar*(264*b1**2*k3**4 + 176*b1*f*k1**2*k3**2 + 176*b1*f*k2**2*k3**2 + 40*f**2*k1**4 + 192*f**2*k1**2*k2**2 - 32*f**2*k1*k2**3*cos(3*theta) - 7*f**2*k2**4*cos(4*theta) + 51*f**2*k2**4 - 4*f**2*k2**2*(-12*k1**2 + k2**2)*cos(2*theta) + 32*f*k1*k2*(11*b1*k3**2 + 5*f*k1**2 + 6*f*k2**2)*cos(theta)) + 1108536*k3**4)/(277134*Ntri*k3**4*nbar**3)
        return expr