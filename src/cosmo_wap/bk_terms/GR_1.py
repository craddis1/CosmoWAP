import numpy as np
        
#PP stuff
def GR_1(params,betas,mu,phi):
    k1,k2,k3,theta,Pk1,Pk2,Pk3,Pkd1,Pkd2,Pkd3,Pkdd1,Pkdd2,Pkdd3,d,K,C,f,D1,b1,b2,g2 = params
    mu2 = mu*np.cos(theta)+np.sqrt((1-mu**2)) *np.sin(theta)*np.cos(phi)
    st = np.sin(theta)
    ct= np.cos(theta)
    gr1,gr2,grd1,beta6,beta7,beta8,beta9,beta10,beta11,beta12,beta13,beta14,beta15,beta16,beta17,beta18,beta19,betad14,betad15,betad16,betad17,betad18,betad19 = betas
    
    perm12 = 1j*D1**4*Pk1*Pk2*b1*beta17*f*k1*mu**5/k2**2 + 1j*D1**4*Pk1*Pk2*b1*beta17*f*k2*mu2**5/k1**2 + 1j*D1**4*Pk1*Pk2*b1*mu**3*(7*b1*beta17*k1**2*k3**2 + 7*b1*f*gr1*k2**2*k3**2 + 7*beta14*f*k1**2*k3**2 + 7*beta16*f*k2**2*k3**2 - beta19*f*k1*k2*(8*ct**2*k1*k2 + 7*ct*(k1**2 + k2**2) + 6*k1*k2) + 8*ct**2*f*gr1*k1**2*k2**2 + 7*ct*f*k1*k2*(beta15*k3**2 + gr1*(k1**2 + k2**2)) + 6*f*gr1*k1**2*k2**2)/(7*k1*k2**2*k3**2) + 1j*D1**4*Pk1*Pk2*b1*mu2**3*(7*b1*beta17*k2**2*k3**2 + 7*b1*f*gr1*k1**2*k3**2 + 7*beta14*f*k2**2*k3**2 + 7*beta16*f*k1**2*k3**2 - beta19*f*k1*k2*(8*ct**2*k1*k2 + 7*ct*(k1**2 + k2**2) + 6*k1*k2) + 8*ct**2*f*gr1*k1**2*k2**2 + 7*ct*f*k1*k2*(beta15*k3**2 + gr1*(k1**2 + k2**2)) + 6*f*gr1*k1**2*k2**2)/(7*k1**2*k2*k3**2) + 1j*D1**4*Pk1*Pk2*b1*mu*(b1*(-beta19*k1**2*k2*(8*ct**2*k1*k2 + 7*ct*(k1**2 + k2**2) + 6*k1*k2) + k3**2*(7*beta14*k1**3 + k2*(7*beta15*ct*k1**2 + 4*ct**2*gr1*k1*k2 + 7*ct*gr1*(k1**2 + k2**2) + k1*k2*(7*beta16 + 10*gr1)))) + 7*gr1*k1*k2**2*k3**2*(b2 + 2*g2*(ct**2 - 1)))/(7*k1**2*k2**2*k3**2) + 1j*D1**4*Pk1*Pk2*b1*mu2*(b1*(-beta19*k1*k2**2*(8*ct**2*k1*k2 + 7*ct*(k1**2 + k2**2) + 6*k1*k2) + k3**2*(4*ct**2*gr1*k1**2*k2 + 7*ct*k1*(beta15*k2**2 + gr1*(k1**2 + k2**2)) + k2*(7*beta14*k2**2 + 7*beta16*k1**2 + 10*gr1*k1**2))) + 7*gr1*k1**2*k2*k3**2*(b2 + 2*g2*(ct**2 - 1)))/(7*k1**2*k2**2*k3**2) + 1j*D1**4*Pk1*Pk2*f**2*k1*mu**5*mu2**2*(beta17 + f*gr1)/k2**2 + 1j*D1**4*Pk1*Pk2*f**2*mu**4*mu2**3*(beta18 + 3*f*gr1)/k2 + 1j*D1**4*Pk1*Pk2*f**2*mu**3*mu2**4*(beta18 + 3*f*gr1)/k1 + 1j*D1**4*Pk1*Pk2*f**2*k2*mu**2*mu2**5*(beta17 + f*gr1)/k1**2 + 1j*D1**4*Pk1*Pk2*f*mu**4*mu2*(7*b1*beta18*k2*k3**2 + 8*ct**2*f*gr1*k1**2*k2 + 7*ct*f*gr1*k1*(k1**2 + k2**2) + 2*f*gr1*k2*(7*b1*k3**2 + 3*k1**2))/(7*k2**2*k3**2) + 1j*D1**4*Pk1*Pk2*f*mu**3*mu2**2*(7*b1*beta17*k1**2*k3**2 + 7*b1*beta18*k2**2*k3**2 + 14*b1*f*gr1*k1**2*k3**2 + 28*b1*f*gr1*k2**2*k3**2 + 7*beta14*f*k1**2*k3**2 + 7*beta16*f*k2**2*k3**2 - beta19*f*k1*k2*(8*ct**2*k1*k2 + 7*ct*(k1**2 + k2**2) + 6*k1*k2) + 24*ct**2*f*gr1*k1**2*k2**2 + 7*ct*f*k1*k2*(beta15*k3**2 + 3*gr1*(k1**2 + k2**2)) + 18*f*gr1*k1**2*k2**2)/(7*k1*k2**2*k3**2) + 1j*D1**4*Pk1*Pk2*f*mu*mu2**4*(7*b1*beta18*k1*k3**2 + 8*ct**2*f*gr1*k1*k2**2 + 7*ct*f*gr1*k2*(k1**2 + k2**2) + 2*f*gr1*k1*(7*b1*k3**2 + 3*k2**2))/(7*k1**2*k3**2) + 1j*D1**4*Pk1*Pk2*f*mu**2*mu2**3*(7*b1*beta17*k2**2*k3**2 + 7*b1*beta18*k1**2*k3**2 + 28*b1*f*gr1*k1**2*k3**2 + 14*b1*f*gr1*k2**2*k3**2 + 7*beta14*f*k2**2*k3**2 + 7*beta16*f*k1**2*k3**2 - beta19*f*k1*k2*(8*ct**2*k1*k2 + 7*ct*(k1**2 + k2**2) + 6*k1*k2) + 24*ct**2*f*gr1*k1**2*k2**2 + 7*ct*f*k1*k2*(beta15*k3**2 + 3*gr1*(k1**2 + k2**2)) + 18*f*gr1*k1**2*k2**2)/(7*k1**2*k2*k3**2) + 1j*D1**4*Pk1*Pk2*mu**2*mu2*(7*b1**2*k2*k3**2*(beta18*k1**2 + f*gr1*(2*k1**2 + k2**2)) + b1*f*(4*ct**2*k1**2*k2*(-2*beta19*k2**2 + gr1*(2*k1**2 + 4*k2**2 + k3**2)) + 7*ct*k1*(beta15*k2**2*k3**2 - beta19*k2**2*(k1**2 + k2**2) + gr1*(k1**2 + k2**2)*(k1**2 + 2*k2**2 + k3**2)) + k2*(-6*beta19*k1**2*k2**2 + 2*gr1*k1**2*(3*k1**2 + 6*k2**2 + 5*k3**2) + 7*k3**2*(beta14*k2**2 + beta16*k1**2))) + 7*f*gr1*k1**2*k2*k3**2*(b2 + 2*g2*(ct**2 - 1)))/(7*k1**2*k2**2*k3**2) + 1j*D1**4*Pk1*Pk2*mu*mu2**2*(7*b1**2*k1*k3**2*(beta18*k2**2 + f*gr1*(k1**2 + 2*k2**2)) + b1*f*(-beta19*k1**2*k2*(8*ct**2*k1*k2 + 7*ct*(k1**2 + k2**2) + 6*k1*k2) + 4*ct**2*gr1*k1*k2**2*(4*k1**2 + 2*k2**2 + k3**2) + 7*ct*k2*(beta15*k1**2*k3**2 + gr1*(k1**2 + k2**2)*(2*k1**2 + k2**2 + k3**2)) + k1*(2*gr1*k2**2*(6*k1**2 + 3*k2**2 + 5*k3**2) + 7*k3**2*(beta14*k1**2 + beta16*k2**2))) + 7*f*gr1*k1*k2**2*k3**2*(b2 + 2*g2*(ct**2 - 1)))/(7*k1**2*k2**2*k3**2)
    perm13 = -1j*D1**4*Pk1*Pk3*b1*beta17*f*k2**5*mu2**5/(k1**2*k3**4) + 1j*D1**4*Pk1*Pk3*b1*f*mu**3*(beta14 - beta16)*(k1**4 - k3**4)/(k1*k3**4) - 1j*D1**4*Pk1*Pk3*b1*k2*mu2**3*(7*b1*beta17*k2**2*k3**2 - beta19*f*k1*(8*ct**2*k1*k2**2 + 9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 - k1*k3**2) + f*gr1*k1*(9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 + k1*(7*b1*k2**2 + 8*ct**2*k2**2 - k3**2)) + 7*f*k2**2*(beta14*k3**2 - beta15*k1*(ct*k2 + k1) + beta16*k1**2))/(7*k1**2*k3**4) + 1j*D1**4*Pk1*Pk3*b1*mu*(k1**2 - k3**2)*(b1*(gr1*(-4*ct**2*k1*k2**2 - ct*k1**2*k2 + 7*ct*k2*k3**2 + 3*k1**3 - 3*k1*k3**2) + 7*k1*k3**2*(beta14 - beta16)) - 7*gr1*k1*(b2*k3**2 + 2*g2*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 - k3**2)))/(7*k1**2*k3**4) + 1j*D1**4*Pk1*Pk3*b1*mu2*(b1*(gr1*k1*k2**2*(-4*ct**2*k1*k2**2 - ct*k1**2*k2 + 7*ct*k2*k3**2 + 3*k1**3 - 3*k1*k3**2) + k3**2*(beta19*k1*(8*ct**2*k1*k2**2 + 9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 - k1*k3**2) + 7*k2**2*(-beta14*k3**2 + beta15*k1*(ct*k2 + k1) - beta16*k1**2))) - 7*gr1*k1**2*k2**2*(b2*k3**2 + 2*g2*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 - k3**2)))/(7*k1**2*k2*k3**4) - 1j*D1**4*Pk1*Pk3*f**2*k1**2*k2*mu**6*mu2*(3*beta17 - beta18)/k3**4 - 3*1j*D1**4*Pk1*Pk3*f**2*k1*k2**2*mu**5*mu2**2*(3*beta17 - beta18)/k3**4 + 1j*D1**4*Pk1*Pk3*f**2*k1*mu**5*(beta14 - beta16)*(k1**2 - k3**2)/k3**4 - 1j*D1**4*Pk1*Pk3*f**2*k2**3*mu**4*mu2**3*(10*beta17 - 3*beta18 + f*gr1)/k3**4 - 1j*D1**4*Pk1*Pk3*f**2*k2**4*mu**3*mu2**4*(5*beta17 - beta18 + 2*f*gr1)/(k1*k3**4) - 1j*D1**4*Pk1*Pk3*f**2*k2**5*mu**2*mu2**5*(beta17 + f*gr1)/(k1**2*k3**4) + 1j*D1**4*Pk1*Pk3*f*mu**4*mu2*(beta19*f*k1*(8*ct**2*k1*k2**2 + 9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 - k1*k3**2) + 7*k2**2*(-b1*(3*beta17 - beta18)*(k1**2 + k3**2) + f*(beta14*(2*k1**2 - 3*k3**2) + beta15*k1*(ct*k2 + k1) - 3*beta16*k1**2 + 2*beta16*k3**2)))/(7*k2*k3**4) + 1j*D1**4*Pk1*Pk3*f*mu**3*mu2**2*(2*beta19*f*k1*(8*ct**2*k1*k2**2 + 9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 - k1*k3**2) + 7*k2**2*(b1*(-3*beta17*(3*k1**2 + k3**2) + beta18*(3*k1**2 + k3**2) + 2*f*gr1*(k1**2 - k3**2)) + f*(beta14*(k1**2 - 3*k3**2) + 2*beta15*k1*(ct*k2 + k1) + beta16*(-3*k1**2 + k3**2))))/(7*k1*k3**4) + 1j*D1**4*Pk1*Pk3*f*k2**2*mu*mu2**4*(7*b1*k1*k2**2*(-5*beta17 + beta18) + f*gr1*(9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 + k1*(14*b1*k2**2 + 8*ct**2*k2**2 - k3**2)))/(7*k1**2*k3**4) + 1j*D1**4*Pk1*Pk3*f*k2*mu**2*mu2**3*(-7*b1*k2**2*(beta17*(10*k1**2 + k3**2) - 3*beta18*k1**2) + beta19*f*k1*(8*ct**2*k1*k2**2 + 9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 - k1*k3**2) + f*(gr1*(-14*b1*k2**2*k3**2 + 9*ct*k1**3*k2 - 7*ct*k1*k2*k3**2 + k1**4 + k1**2*(28*b1*k2**2 + 8*ct**2*k2**2 - k3**2)) + 7*k2**2*(-beta14*k3**2 + beta15*k1*(ct*k2 + k1) - beta16*k1**2)))/(7*k1**2*k3**4) + 1j*D1**4*Pk1*Pk3*mu*mu2**2*(-7*b1**2*k1*k2**2*(2*f*gr1*(k1**2 - k3**2) + k3**2*(3*beta17 - beta18)) + b1*f*(2*beta19*k1**2*(8*ct**2*k1*k2**2 + 9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 - k1*k3**2) - gr1*(9*ct*k1**4*k2 - ct*k1**2*k2*(k2**2 + 16*k3**2) + 7*ct*k2*k3**2*(k2**2 + k3**2) + k1**5 + k1**3*(k2**2*(8*ct**2 + 3) - 2*k3**2) + k1*(-4*ct**2*(k2**4 + 2*k2**2*k3**2) - 3*k2**2*k3**2 + k3**4)) + 7*k1*k2**2*(beta14*(k1**2 - 3*k3**2) + 2*beta15*k1*(ct*k2 + k1) + beta16*(-3*k1**2 + k3**2))) + 7*f*gr1*k1*k2**2*(b2*k3**2 + 2*g2*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 - k3**2)))/(7*k1**2*k3**4) + 1j*D1**4*Pk1*Pk3*mu**2*mu2*(-7*b1**2*k2**2*(f*gr1*(k1**2 - k3**2)**2 + k1**2*k3**2*(3*beta17 - beta18)) + b1*f*(beta19*k1*(k1**2 + k3**2)*(8*ct**2*k1*k2**2 + 9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 - k1*k3**2) + k2**2*(7*beta14*(2*k1**4 - 3*k1**2*k3**2 - k3**4) + k1*(7*beta15*(k1**2 + k3**2)*(ct*k2 + k1) + 7*beta16*k1*(-3*k1**2 + k3**2) + gr1*(4*ct**2*k1*k2**2 + ct*k1**2*k2 - 7*ct*k2*k3**2 - 3*k1**3 + 3*k1*k3**2)))) + 7*f*gr1*k1**2*k2**2*(b2*k3**2 + 2*g2*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 - k3**2)))/(7*k1**2*k2*k3**4)
    perm23 = -1j*D1**4*Pk2*Pk3*b1*beta17*f*k1**5*mu**5/(k2**2*k3**4) + 1j*D1**4*Pk2*Pk3*b1*f*mu2**3*(beta14 - beta16)*(k2**4 - k3**4)/(k2*k3**4) - 1j*D1**4*Pk2*Pk3*b1*k1*mu**3*(7*b1*beta17*k1**2*k3**2 + 7*b1*f*gr1*k1**2*k2**2 + 7*beta14*f*k1**2*k3**2 - 7*beta15*f*k1**2*k2*(ct*k1 + k2) + 7*beta16*f*k1**2*k2**2 - 8*beta19*ct**2*f*k1**2*k2**2 - 9*beta19*ct*f*k1*k2**3 + 7*beta19*ct*f*k1*k2*k3**2 - beta19*f*k2**4 + beta19*f*k2**2*k3**2 + 8*ct**2*f*gr1*k1**2*k2**2 + 9*ct*f*gr1*k1*k2**3 - 7*ct*f*gr1*k1*k2*k3**2 + f*gr1*k2**4 - f*gr1*k2**2*k3**2)/(7*k2**2*k3**4) - 1j*D1**4*Pk2*Pk3*b1*mu2*(k2**2 - k3**2)*(b1*(4*ct**2*gr1*k1**2*k2 + ct*gr1*k1*(k2**2 - 7*k3**2) - 3*gr1*k2*(k2**2 - k3**2) + 7*k2*k3**2*(-beta14 + beta16)) + 7*gr1*k2*(b2*k3**2 + 2*ct**2*g2*k1**2 + 4*ct*g2*k1*k2 + 2*g2*k2**2 - 2*g2*k3**2))/(7*k2**2*k3**4) - 1j*D1**4*Pk2*Pk3*b1*mu*(b1*(4*ct**2*k1**2*k2**2*(-2*beta19*k3**2 + gr1*k1**2) + ct*k1*k2*(gr1*k1**2*(k2**2 - 7*k3**2) + k3**2*(-7*beta15*k1**2 - 9*beta19*k2**2 + 7*beta19*k3**2)) + 3*gr1*k1**2*k2**2*(-k2**2 + k3**2) + k3**2*(7*beta14*k1**2*k3**2 - 7*beta15*k1**2*k2**2 + 7*beta16*k1**2*k2**2 - beta19*k2**4 + beta19*k2**2*k3**2)) + 7*gr1*k1**2*k2**2*(b2*k3**2 + 2*ct**2*g2*k1**2 + 4*ct*g2*k1*k2 + 2*g2*(k2**2 - k3**2)))/(7*k1*k2**2*k3**4) - 1j*D1**4*Pk2*Pk3*f**2*k1**5*mu**5*mu2**2*(beta17 + f*gr1)/(k2**2*k3**4) - 1j*D1**4*Pk2*Pk3*f**2*k1**4*mu**4*mu2**3*(5*beta17 - beta18 + 2*f*gr1)/(k2*k3**4) - 1j*D1**4*Pk2*Pk3*f**2*k1**3*mu**3*mu2**4*(10*beta17 - 3*beta18 + f*gr1)/k3**4 - 3*1j*D1**4*Pk2*Pk3*f**2*k1**2*k2*mu**2*mu2**5*(3*beta17 - beta18)/k3**4 - 1j*D1**4*Pk2*Pk3*f**2*k1*k2**2*mu*mu2**6*(3*beta17 - beta18)/k3**4 + 1j*D1**4*Pk2*Pk3*f**2*k2*mu2**5*(beta14 - beta16)*(k2**2 - k3**2)/k3**4 + 1j*D1**4*Pk2*Pk3*f*k1**2*mu**4*mu2*(7*b1*k1**2*k2*(-5*beta17 + beta18 + 2*f*gr1) + f*gr1*(8*ct**2*k1**2*k2 + ct*k1*(9*k2**2 - 7*k3**2) + k2**3 - k2*k3**2))/(7*k2**2*k3**4) + 1j*D1**4*Pk2*Pk3*f*k1*mu**3*mu2**2*(-7*b1*k1**2*(beta17*(10*k2**2 + k3**2) - 3*beta18*k2**2 + 2*f*gr1*(-2*k2**2 + k3**2)) + 7*beta15*f*k1**2*k2*(ct*k1 + k2) + f*(-7*beta14*k1**2*k3**2 - 7*beta16*k1**2*k2**2 + beta19*k2*(8*ct**2*k1**2*k2 + 9*ct*k1*k2**2 - 7*ct*k1*k3**2 + k2**3 - k2*k3**2) + 8*ct**2*gr1*k1**2*k2**2 + 9*ct*gr1*k1*k2**3 - 7*ct*gr1*k1*k2*k3**2 + gr1*k2**4 - gr1*k2**2*k3**2))/(7*k2**2*k3**4) + 1j*D1**4*Pk2*Pk3*f*mu**2*mu2**3*(7*b1*k1**2*(-3*beta17*(3*k2**2 + k3**2) + beta18*(3*k2**2 + k3**2) + 2*f*gr1*(k2**2 - k3**2)) + 14*beta15*f*k1**2*k2*(ct*k1 + k2) + f*(7*beta14*k1**2*(k2**2 - 3*k3**2) + 7*beta16*k1**2*(-3*k2**2 + k3**2) + 2*beta19*k2*(8*ct**2*k1**2*k2 + 9*ct*k1*k2**2 - 7*ct*k1*k3**2 + k2**3 - k2*k3**2)))/(7*k2*k3**4) + 1j*D1**4*Pk2*Pk3*f*mu*mu2**4*(-7*b1*k1**2*(3*beta17 - beta18)*(k2**2 + k3**2) + 7*beta15*f*k1**2*k2*(ct*k1 + k2) + f*(7*beta14*k1**2*(2*k2**2 - 3*k3**2) - 7*beta16*k1**2*(3*k2**2 - 2*k3**2) + beta19*k2*(8*ct**2*k1**2*k2 + 9*ct*k1*k2**2 - 7*ct*k1*k3**2 + k2**3 - k2*k3**2)))/(7*k1*k3**4) - 1j*D1**4*Pk2*Pk3*mu**2*mu2*(7*b1**2*k1**2*k2*(2*f*gr1*(k2**2 - k3**2) + k3**2*(3*beta17 - beta18)) + b1*f*(-4*ct**2*k1**2*k2*(4*beta19*k2**2 + gr1*(k1**2 - 2*k2**2 + 2*k3**2)) + ct*k1*(-14*beta15*k1**2*k2**2 + 2*beta19*k2**2*(-9*k2**2 + 7*k3**2) + gr1*(-k1**2*(k2**2 - 7*k3**2) + 9*k2**4 - 16*k2**2*k3**2 + 7*k3**4)) + k2*(-7*beta14*k1**2*(k2**2 - 3*k3**2) - 14*beta15*k1**2*k2**2 + 21*beta16*k1**2*k2**2 - 7*beta16*k1**2*k3**2 - 2*beta19*k2**4 + 2*beta19*k2**2*k3**2 + 3*gr1*k1**2*k2**2 - 3*gr1*k1**2*k3**2 + gr1*k2**4 - 2*gr1*k2**2*k3**2 + gr1*k3**4)) - 7*f*gr1*k1**2*k2*(b2*k3**2 + 2*ct**2*g2*k1**2 + 4*ct*g2*k1*k2 + 2*g2*(k2**2 - k3**2)))/(7*k2**2*k3**4) + 1j*D1**4*Pk2*Pk3*mu*mu2**2*(-7*b1**2*k1**2*(f*gr1*(k2**2 - k3**2)**2 + k2**2*k3**2*(3*beta17 - beta18)) + b1*f*(7*beta14*k1**2*(2*k2**4 - 3*k2**2*k3**2 - k3**4) + 4*ct**2*k1**2*k2**2*(2*beta19*(k2**2 + k3**2) + gr1*k1**2) + ct*k1*k2*(7*beta15*k1**2*(k2**2 + k3**2) + beta19*(9*k2**4 + 2*k2**2*k3**2 - 7*k3**4) + gr1*k1**2*(k2**2 - 7*k3**2)) + k2**2*(7*beta15*k1**2*(k2**2 + k3**2) + 7*beta16*k1**2*(-3*k2**2 + k3**2) + beta19*k2**4 - beta19*k3**4 - 3*gr1*k1**2*k2**2 + 3*gr1*k1**2*k3**2)) + 7*f*gr1*k1**2*k2**2*(b2*k3**2 + 2*ct**2*g2*k1**2 + 4*ct*g2*k1*k2 + 2*g2*(k2**2 - k3**2)))/(7*k1*k2**2*k3**4)
    
    return (perm12+perm13+perm23)
    
    