import numpy as np

class PNG:
    def l0(params,paramsPNG):
        k1,k2,k3,theta,Pk1,Pk2,Pk3,Pkd1,Pkd2,Pkd3,Pkdd1,Pkdd2,Pkdd3,d,K,C,f,D1,b1,b2,g2 = params
        fNL,bE01,bE11,bE02,alphak1,alphak2,alphak3 = paramsPNG

        st = np.sin(theta)
        ct= np.cos(theta)
        
        perm12 = 2*np.sqrt(np.pi)*D1**4*Pk1*Pk2*(alphak1**2*(alphak2**2*(105*b1**3*k3**2*(ct**2*k1*k2*(-3*K + f + 3) + ct*(f + 3)*(k1**2 + k2**2) + k1*k2*(3*K + f*st**2 + f + 3)) + 21*b1**2*(ct**4*f*k1*k2*(k2**2*(10 - 10*C) + k3**2*(-5*K + 3*f + 5)) + ct**3*f*(k1**2*(k2**2*(25 - 20*C) + k3**2*(3*f + 5)) + 5*k2**4 + k2**2*k3**2*(6*f + 5)) + ct**2*k1*k2*(6*f**2*k3**2*(st**2 + 2) - 5*f*(k1**2*(2*C - 4) + 2*k2**2*(C*(st**2 - 1) - st**2 - 1) + k3**2*(st**2*(K - 1) - 2)) + 30*g2*k3**2) + ct*f*(5*k1**4 + k1**2*(5*k2**2*(4*C + st**2 + 1) + k3**2*(3*f*st**2 + 6*f + 5*st**2 + 5)) + 5*k2**4*st**2 + k2**2*k3**2*(6*f*st**2 + 3*f + 5*st**2 + 5)) + k1*k2*(10*C*f*(k1**2 + k2**2*st**2) + k3**2*(15*b2 + f**2*(3*st**4 + 4*st**2 + 3) + 5*f*(K + 1)*(st**2 + 1) - 30*g2))) + 3*b1*f*(ct**6*f*k1*k2**3*(42 - 42*C) + 3*ct**5*f*k2**2*(5*f*k3**2 + k1**2*(35 - 28*C) + 7*k2**2) + ct**4*k1*k2*(45*f**2*k3**2 - 21*f*(k1**2*(2*C - 4) + 4*k2**2*(st**2*(C - 1) - 1) + k3**2*(K - 1)) + 70*g2*k3**2) + 3*ct**3*f*(7*k1**4 + k1**2*(k2**2*(st**2*(42 - 28*C) + 42) + k3**2*(10*f + 7)) + 7*k2**4*(2*st**2 + 1) + k2**2*k3**2*(10*f*(st**2 + 1) + 7)) + ct**2*k1*k2*(9*f**2*k3**2*(6*st**2 + 5) - 7*f*(2*k1**2*(st**2*(C - 4) - 6) + 2*k2**2*(C*(3*st**4 - 5*st**2 - 3) - 3*st**4 - 4*st**2 - 3) + k3**2*(K*(st**2 - 3) - st**2 - 3)) + 35*k3**2*(b2 + 2*g2*st**2)) + ct*f*(7*k1**4*(st**2 + 3) + k1**2*(7*k2**2*(12*C*(st**2 + 1) + 3*st**4 + 2*st**2 + 3) + k3**2*(3*f*(6*st**2 + 5) + 7*st**2)) + k2**2*st**2*(7*k2**2*(3*st**2 + 1) + k3**2*(3*f*(5*st**2 + 6) + 7))) + k1*k2*(14*C*f*(k1**2*(st**2 + 3) + k2**2*st**2*(3*st**2 + 1)) + k3**2*(35*b2*(st**2 + 1) + f*st**2*(7*K + 9*f*st**2 + 9*f + 7) - 70*g2*(st**2 + 1)))) + f**2*(ct**6*f*k1*k2**3*(90 - 90*C) + 5*ct**5*f*k2**2*(7*f*k3**2 + k1**2*(45 - 36*C) + 9*k2**2) + 2*ct**4*k1*k2*(35*f**2*k3**2 - 9*f*(k1**2*(5*C - 10) + k2**2*(6*C*st**2 - 5*C - 6*st**2 - 5)) + 63*g2*k3**2) + ct**3*f*(45*k1**4 + k1**2*(35*f*k3**2 - 9*k2**2*(4*C*(3*st**2 - 5) - 18*st**2 - 5)) + 2*k2**2*st**2*(25*f*k3**2 + 27*k2**2)) + 3*ct**2*k1*k2*(-6*C*f*(k1**2*(st**2 - 5) + k2**2*st**2*(st**2 - 6)) + 21*b2*k3**2 + 20*f**2*k3**2*st**2 + 24*f*k1**2*st**2 + 6*f*k2**2*st**4 + 18*f*k2**2*st**2 + 14*g2*k3**2*st**2 - 42*g2*k3**2) + 3*ct*f*st**2*(3*k1**4 + k1**2*(5*f*k3**2 + 3*k2**2*(12*C + st**2 + 1)) + k2**2*st**2*(5*f*k3**2 + 3*k2**2)) + 3*k1*k2*st**2*(6*C*f*(k1**2 + k2**2*st**2) + k3**2*(7*b2 + 2*f**2*st**2 - 14*g2)))) + 3*alphak2*(35*b1**2*k3**2*(bE01*(ct**2*k1*k2*(-3*K + f + 3) + 2*ct*f*k2**2 + ct*k1**2*(f + 3) + f*k1*k2*(st**2 + 2) + k1*k2*(3*K + 3)) + 3*bE11*k1*k2) - 7*b1*(bE01*(ct**4*f*k1*k2**3*(10*C - 10) + ct**3*f*k2**2*(k1**2*(20*C - 25) - 5*k2**2 + k3**2*(5 - 6*f)) - ct**2*k1*k2*(12*f**2*k3**2 - 5*f*(k1**2*(2*C - 4) + 2*k2**2*(C*(st**2 - 1) - st**2 - 1) + k3**2*(K - 1)) + 30*g2*k3**2) - ct*f*(5*k1**4 + k1**2*(5*k2**2*(4*C + st**2 + 1) + k3**2*(6*f + 5)) + k2**2*(6*f*k3**2*(st**2 + 1) + st**2*(5*k2**2 - 5*k3**2))) - k1*k2*(10*C*f*(k1**2 + k2**2*st**2) + k3**2*(15*b2 + f**2*(4*st**2 + 6) + 5*f*(K + 1) - 30*g2))) - 5*bE11*f*k1*k2*k3**2*(ct**2 + st**2 + 1)) + f*(bE01*(ct**4*f*k1*k2**3*(42 - 42*C) + 3*ct**3*f*k2**2*(k1**2*(35 - 28*C) + 7*k2**2 + k3**2*(10*f - 7)) + ct**2*k1*k2*(45*f**2*k3**2 - 14*f*(k1**2*(3*C - 6) + k2**2*(C*(st**2 - 3) - st**2 - 3)) + 70*g2*k3**2) + ct*f*(21*k1**4 + k1**2*(15*f*k3**2 + 7*k2**2*(12*C + st**2 + 3)) + k2**2*st**2*(7*k2**2 + k3**2*(18*f - 7))) + k1*k2*(14*C*f*(3*k1**2 + k2**2*st**2) + k3**2*(35*b2 + 9*f**2*st**2 - 70*g2))) + 7*bE11*f*k1*k2*k3**2*(3*ct**2 + st**2))) + 21*bE01*k2*k3**2*(5*b1*(-3*bE01*ct*k2 + bE01*f*(ct*k2 + k1) + 3*bE11*k1) + f*(-5*bE01*ct*k2 + 3*bE01*f*(ct*k2 + k1) + 5*bE11*k1))) + 3*alphak1*(alphak2**2*(35*b1**2*k3**2*(bE01*(ct**2*k1*k2*(-3*K + 2*f + 3) + ct*f*(2*k1**2 + k2**2) + 3*ct*k2**2 + k1*k2*(3*K + 2*f*st**2 + f + 3)) + 3*bE11*k1*k2) + 7*b1*(bE01*(ct**4*f*k1*k2*(k2**2*(10 - 10*C) + k3**2*(-5*K + 6*f + 5)) + ct**3*f*(k1**2*(6*f*k3**2 + k2**2*(25 - 20*C)) + 5*k2**4 + k2**2*k3**2*(6*f + 5)) + ct**2*k1*k2*(12*f**2*k3**2*(st**2 + 1) - 5*f*(k1**2*(2*C - 4) + 2*k2**2*(C*(st**2 - 1) - st**2 - 1) + k3**2*(K*(st**2 - 1) - st**2 - 1)) + 30*g2*k3**2) + ct*f*(5*k1**4 + k1**2*(5*k2**2*(4*C + st**2 + 1) + k3**2*(6*f*(st**2 + 1) - 5)) + k2**2*st**2*(5*k2**2 + k3**2*(6*f + 5))) + k1*k2*(10*C*f*(k1**2 + k2**2*st**2) + k3**2*(15*b2 + f*st**2*(5*K + 6*f*st**2 + 4*f + 5) - 30*g2))) + 5*bE11*f*k1*k2*k3**2*(ct**2 + st**2 + 1)) + f*(bE01*(ct**6*f*k1*k2**3*(42 - 42*C) + 3*ct**5*f*k2**2*(5*f*k3**2 + k1**2*(35 - 28*C) + 7*k2**2) + ct**4*k1*k2*(45*f**2*k3**2 - 42*f*(k1**2*(C - 2) + k2**2*(2*C*st**2 - C - 2*st**2 - 1)) + 70*g2*k3**2) + 3*ct**3*f*(7*k1**4 + k1**2*(7*k2**2*(-4*C*st**2 + 4*C + 6*st**2 + 1) + k3**2*(10*f - 7)) + 2*k2**2*st**2*(5*f*k3**2 + 7*k2**2)) + ct**2*k1*k2*(-14*C*f*(k1**2*(st**2 - 3) + 3*k2**2*st**2*(st**2 - 2)) + 35*b2*k3**2 + 54*f**2*k3**2*st**2 + 56*f*k1**2*st**2 + 42*f*k2**2*st**4 + 42*f*k2**2*st**2 + 70*g2*k3**2*st**2 - 70*g2*k3**2) + ct*f*st**2*(7*k1**4 + k1**2*(7*k2**2*(12*C + 3*st**2 + 1) + k3**2*(18*f - 7)) + 3*k2**2*st**2*(5*f*k3**2 + 7*k2**2)) + k1*k2*st**2*(14*C*f*(k1**2 + 3*k2**2*st**2) + k3**2*(35*b2 + 9*f**2*st**2 - 70*g2))) + 7*bE11*f*k1*k2*k3**2*(3*ct**2 + st**2))) + alphak2*(-7*bE01**2*(ct**4*f*k1*k2**3*(10*C - 10) + ct**3*f*k2**2*(k1**2*(20*C - 25) - 5*k2**2 + k3**2*(5 - 6*f)) - ct**2*k1*k2*(12*f**2*k3**2 - 10*f*(-b1*k3**2 + k1**2*(C - 2) + k2**2*(C*(st**2 - 1) - st**2 - 1)) + k3**2*(-15*K*b1 + 15*b1 + 30*g2)) - ct*f*(5*k1**4 + k1**2*(5*k2**2*(4*C + st**2 + 1) + k3**2*(10*b1 + 6*f - 5)) + k2**2*(10*b1*k3**2 + st**2*(5*k2**2 + k3**2*(6*f - 5)))) - k1*k2*(10*C*f*(k1**2 + k2**2*st**2) + k3**2*(5*b1*(3*K + 2*f*st**2 + 2*f + 3) + 15*b2 + 4*f**2*st**2 - 30*g2))) + 35*bE01*bE11*k1*k2*k3**2*(6*b1 + f*(ct**2 + st**2 + 1)) + 2*k1*k2*(alphak3*fNL*(105*b1**3*k3**2 + 35*b1**2*f*(ct**2*(k2**2 + k3**2) + 2*ct*k1*k2 + k1**2 + k2**2*st**2 + k3**2*st**2 + k3**2) + 7*b1*f**2*(3*ct**4*k2**2 + 3*ct**2*(2*k2**2*st**2 + k2**2 + k3**2) + 6*ct*k1*k2*(ct**2 + st**2 + 1) + k1**2*(3*ct**2 + st**2 + 3) + st**2*(3*k2**2*st**2 + k2**2 + k3**2)) + 3*f**3*(5*ct**4*k2**2 + 10*ct**3*k1*k2 + ct**2*(5*k1**2 + 6*k2**2*st**2) + 6*ct*k1*k2*st**2 + st**2*(k1**2 + k2**2*st**2))) + 7*bE02*k3**2*(15*b1**2 + 5*b1*f*(ct**2 + st**2 + 1) + f**2*(3*ct**2 + st**2)))) + 7*bE01*k2*(2*alphak3*fNL*k1*(15*b1**2*k3**2 + 5*b1*f*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 + k2**2*st**2 + k3**2) + f**2*(6*ct*k1*k2 + 3*k1**2 + k2**2*(3*ct**2 + st**2))) + k3**2*(30*b1*bE02*k1 + 5*bE01**2*(ct*f*k2 - 3*ct*k2 + f*k1) + 15*bE01*bE11*k1 + 10*bE02*f*k1))) + 21*bE01*k1*(alphak2**2*k3**2*(5*b1*(bE01*(ct**2*f*k2 + ct*k1*(f - 3) + f*k2*st**2) + 3*bE11*k2) + f*(ct**2 + st**2)*(bE01*(3*ct**2*f*k2 + ct*k1*(3*f - 5) + 3*f*k2*st**2) + 5*bE11*k2)) + alphak2*(2*alphak3*fNL*k2*(15*b1**2*k3**2 + 5*b1*f*(2*ct*k1*k2 + k1**2 + (ct**2 + st**2)*(k2**2 + k3**2)) + f**2*(3*ct**4*k2**2 + 6*ct**3*k1*k2 + 3*ct**2*(k1**2 + 2*k2**2*st**2) + 6*ct*k1*k2*st**2 + st**2*(k1**2 + 3*k2**2*st**2))) + 5*k3**2*(bE01**2*(ct**2*f*k2 + ct*k1*(f - 3) + f*k2*st**2) + 3*bE01*bE11*k2 + 2*bE02*k2*(3*b1 + f*(ct**2 + st**2)))) + 10*bE01*k2*(alphak3*fNL*(3*b1*k3**2 + f*(2*ct*k1*k2 + k1**2 + k2**2*(ct**2 + st**2))) + 3*bE02*k3**2)))/(315*alphak1**2*alphak2**2*k1*k2*k3**2)
        perm13 = 2*np.sqrt(np.pi)*D1**4*Pk1*Pk3*(alphak1**2*(alphak3**2*(105*b1**3*k3**2*(-3*K*k1*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 - k3**2) + k2*(ct**2*k1*k2*(f + 3) + ct*(f + 3)*(k1**2 - k3**2) + f*k1*k2*st**2)) + 21*b1**2*(f**2*k2*(3*ct**4*k1*k2**3 + 3*ct**3*k2**2*(3*k1**2 - 2*k3**2) + 3*ct**2*k1*k2*(3*k1**2 + 2*k2**2*st**2 - 2*k3**2) + 3*ct*(k1**4 + 3*k1**2*k2**2*st**2 - k3**2*(2*k2**2*st**2 + k3**2)) + k1*k2*st**2*(3*k1**2 + 3*k2**2*st**2 - 2*k3**2)) - 5*f*(K*k1*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 - k3**2)*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 + k2**2*st**2 + k3**2) - ct**4*k1*k2**2*(k2**2 - k3**2*(2*C - 2)) + ct**3*k2*(k1**2*(-3*k2**2 + k3**2*(4*C - 3)) + k3**2*(k2**2 + k3**2)) + ct**2*k1*(-k1**2*(3*k2**2 + k3**2*(1 - 2*C)) - k2**4*st**2 + k2**2*k3**2*(st**2*(2*C - 2) + 1) + k3**4*(1 - 2*C)) + ct*k2*(-k1**4 - k1**2*st**2*(k2**2 + k3**2*(3 - 4*C)) + k2**2*k3**2*st**2 + k3**4*(st**2 + 1)) + k1*k3**2*st**2*(2*C - 1)*(k1**2 - k3**2)) + 15*k1*k3**2*(b2*k3**2 + 2*g2*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 - k3**2))) - 3*b1*f*(ct**6*f*k1*k2**4*(42*C - 42) + 3*ct**5*f*k2**3*(5*f*k2**2 + k1**2*(56*C - 49) + 7*k3**2) + ct**4*k1*k2**2*(30*f**2*k2**2 + 21*f*(k1**2*(12*C - 9) + k2**2*(K + st**2*(4*C - 4) - 1) + k3**2) - 70*g2*k2**2) + ct**3*k2*(30*f**2*k2**2*(k2**2*st**2 + k3**2) + 21*f*(k1**4*(8*C - 5) + k1**2*k2**2*(4*K + st**2*(12*C - 10) - 3) + k2**2*k3**2*(2*st**2 + 1) + k3**4) - 280*g2*k1**2*k2**2) + ct**2*k1*(3*f**2*k2**2*(-10*k1**2 + 12*k2**2*st**2 + 15*k3**2) + 7*f*(k1**4*(6*C - 3) + k1**2*k2**2*(18*K + st**2*(38*C - 26) - 9) + k2**4*st**2*(K + st**2*(6*C - 6) - 1) + k2**2*k3**2*(-3*K - st**2*(10*C - 10) + 6) + k3**4*(3 - 6*C)) - 35*k2**2*(b2*k3**2 + 2*g2*(6*k1**2 + k2**2*st**2))) + ct*k2*(-3*f**2*(5*k1**4 - 5*k1**2*k3**2 - 5*k2**4*st**4 - 6*k2**2*k3**2*st**2) + 7*f*(k1**4*(12*K + st**2*(16*C - 9) - 3) + k1**2*(k2**2*st**2*(2*K + st**2*(12*C - 9) - 1) + k3**2*(-6*K + st**2*(4 - 8*C) + 3)) + k3**2*st**2*(k2**2*(3*st**2 + 1) + k3**2)) - 70*k1**2*(b2*k3**2 + 4*g2*k1**2 + 2*g2*k2**2*st**2)) - k1*(35*b2*k3**2*(k1**2 + k2**2*st**2 + k3**2) - 3*f**2*k2**2*st**2*(-2*k1**2 + 2*k2**2*st**2 + 3*k3**2) - 7*f*(k1**2 - k3**2)*(K*(3*k1**2 + k2**2*st**2) + st**2*(2*C - 1)*(k1**2 + 3*k2**2*st**2 + k3**2)) + 70*g2*(k1**2 - k3**2)*(k1**2 + k2**2*st**2 + k3**2))) - f**2*(ct**6*f*k1*k2**4*(90*C - 90) + 5*ct**5*f*k2**3*(7*f*k2**2 + k1**2*(72*C - 63) + 9*k3**2) + 3*ct**4*k1*k2**2*(35*f**2*k2**2 + 3*f*(k1**2*(60*C - 45) + k2**2*st**2*(12*C - 12) - k3**2*(10*C - 15)) - 42*g2*k2**2) + ct**3*k2*(5*f**2*(21*k1**2*k2**2 + 10*k2**4*st**2) + 9*f*(k1**4*(40*C - 25) + k1**2*(k2**2*st**2*(36*C - 30) + k3**2*(15 - 20*C)) + 6*k2**2*k3**2*st**2) - 504*g2*k1**2*k2**2) + ct**2*k1*(5*f**2*(7*k1**2*k2**2 + 18*k2**4*st**2) + 9*f*(k1**4*(10*C - 5) + k1**2*(k2**2*st**2*(38*C - 26) + k3**2*(5 - 10*C)) + k2**2*st**2*(2*C - 2)*(k2**2*st**2 - 6*k3**2)) - 21*k2**2*(3*b2*k3**2 + 2*g2*(18*k1**2 + k2**2*st**2 - 3*k3**2))) + 3*ct*k2*(-42*b2*k1**2*k3**2 + f*st**2*(k1**4*(48*C - 27) + 3*k1**2*(5*f*k2**2 + k2**2*st**2*(4*C - 3) + k3**2*(7 - 12*C)) + k2**2*st**2*(5*f*k2**2 + 3*k3**2)) - 28*g2*k1**2*(6*k1**2 + k2**2*st**2 - 3*k3**2)) + k1*(-21*b2*k3**2*(3*k1**2 + k2**2*st**2) + f*st**2*(k1**4*(18*C - 9) + k1**2*(5*f*k2**2 - (18*C - 9)*(-k2**2*st**2 + k3**2)) + 9*k2**2*st**2*(f*k2**2 + k3**2*(1 - 2*C))) - 42*g2*(k1**2 - k3**2)*(3*k1**2 + k2**2*st**2)))) + 3*alphak3*k3**2*(-35*b1**2*(bE01*(3*K*k1*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 - k3**2) - ct**2*k1*k2**2*(f + 3) + 2*ct*f*k2*k3**2 - ct*k1**2*k2*(f + 3) - k1*(f*k2**2*st**2 + 3*k3**2)) - 3*bE11*k1*k3**2) - 7*b1*(bE01*(2*f**2*k2*(3*ct**3*k2**2 + 3*ct**2*k1*k2 + 3*ct*(k2**2*st**2 + k3**2) + k1*k2*st**2) + 5*f*(ct*k1**2*k2*(4*C*st**2 + 2*K + ct**2*(4*C - 3) - 3*st**2 - 4) - ct*k2*(ct**2 + st**2)*(k2**2 - k3**2) + k1**3*(2*C*st**2 + K + ct**2*(2*C - 1) - st**2 - 1) + k1*(ct**4*k2**2*(2*C - 2) + ct**2*(k2**2*(K + st**2*(2*C - 2) - 4) + k3**2*(1 - 2*C)) - k2**2*st**2 - k3**2*(K + st**2*(2*C - 1) + 1))) - 15*k1*(b2*k3**2 + 2*g2*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 - k3**2))) - 5*bE11*f*k1*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 + k2**2*st**2 + k3**2)) + f*(bE01*(-3*f**2*k2*(10*ct**3*k2**2 + 15*ct**2*k1*k2 + 5*ct*k1**2 + 6*ct*k2**2*st**2 + 3*k1*k2*st**2) - 7*f*(ct*k1**2*k2*(ct**2*(12*C - 9) + st**2*(4*C - 3) - 9) - ct*k2*(3*ct**2 + st**2)*(k2**2 - k3**2) + k1**3*(ct**2*(6*C - 3) + st**2*(2*C - 1) - 3) + k1*(ct**4*k2**2*(6*C - 6) + ct**2*(k2**2*(st**2*(2*C - 2) - 9) + k3**2*(3 - 6*C)) + st**2*(-k2**2 + k3**2*(1 - 2*C)))) + 35*k1*(b2*k3**2 + 2*g2*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 - k3**2))) + 7*bE11*f*k1*(6*ct*k1*k2 + 3*k1**2 + k2**2*(3*ct**2 + st**2)))) + 21*bE01*k3**4*(5*b1*(-bE01*ct*k2*(f - 3) + 3*bE01*k1 + 3*bE11*k1) + f*(bE01*ct*k2*(5 - 3*f) + 5*bE01*k1 + 5*bE11*k1))) + 3*alphak1*(alphak3**2*(35*b1**2*k3**2*(bE01*(2*ct*k1**2*k2*(-3*K + f + 3) - ct*k2*k3**2*(f + 3) + k1**3*(3 - 3*K) + k1*(3*K*k3**2 + ct**2*k2**2*(-3*K + 2*f + 3) + 2*f*k2**2*st**2)) + 3*bE11*k1*k3**2) + 7*b1*(bE01*(2*f**2*k2*(3*ct**4*k1*k2**3 + 3*ct**3*k2**2*(3*k1**2 - k3**2) + 3*ct**2*k1*k2*(3*k1**2 + 2*k2**2*st**2 - k3**2) + 3*ct*(k1**4 + 3*k1**2*k2**2*st**2 - k2**2*k3**2*st**2) + k1*k2*st**2*(3*k1**2 + 3*k2**2*st**2 - k3**2)) - 5*f*(4*ct*k1**4*k2*(K - 1) + ct*k1**2*k2*(-2*K*(-k2**2*st**2 + k3**2) + ct**2*(k2**2*(4*K - 4) + k3**2*(4*C - 3)) + st**2*(-2*k2**2 + k3**2*(4*C - 3))) + ct*k2*k3**2*(ct**2 + st**2)*(k2**2 + k3**2) + k1**5*(K - 1) + k1**3*(ct**2*(k2**2*(6*K - 6) + k3**2*(2*C - 1)) + k2**2*st**2*(K - 1) - k3**2*(-2*C*st**2 + K + st**2 + 1)) + k1*(ct**4*k2**2*(k2**2*(K - 1) + k3**2*(2*C - 2)) + ct**2*(k2**4*st**2*(K - 1) - k2**2*k3**2*(K - st**2*(2*C - 2) - 2) + k3**4*(1 - 2*C)) + k3**2*st**2*(-K*k2**2 + k3**2*(1 - 2*C)))) + 15*k1*k3**2*(b2*k3**2 + 2*g2*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 - k3**2))) + 5*bE11*f*k1*k3**2*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 + k2**2*st**2 + k3**2)) + f*(bE01*(-3*f**2*k2*(5*ct**5*k2**4 + 10*ct**4*k1*k2**3 + 10*ct**3*k2**4*st**2 - 2*ct**2*(5*k1**3*k2 - 6*k1*k2**3*st**2) - 5*ct*(k1**4 - k2**4*st**4) - 2*k1**3*k2*st**2 + 2*k1*k2**3*st**4) - 7*f*(ct*k1**4*k2*(ct**2*(24*C - 15) + st**2*(16*C - 9) - 9) + ct*k1**2*k2*(ct**4*k2**2*(24*C - 21) + 3*ct**2*(k2**2*(st**2*(12*C - 10) - 1) + k3**2*(3 - 4*C)) + st**2*(k2**2*(st**2*(12*C - 9) - 1) + k3**2*(7 - 12*C))) + 3*ct*k2**3*k3**2*(ct**2 + st**2)**2 + k1**5*(ct**2*(6*C - 3) + st**2*(2*C - 1) - 3) + k1**3*(ct**4*k2**2*(36*C - 27) + ct**2*(k2**2*(st**2*(38*C - 26) - 9) + k3**2*(3 - 6*C)) + st**2*(k2**2*(st**2*(6*C - 3) - 1) + k3**2*(1 - 2*C))) + 3*k1*k2**2*(ct**2 + st**2)*(ct**4*k2**2*(2*C - 2) + ct**2*(k2**2*st**2*(2*C - 2) + k3**2*(3 - 2*C)) + k3**2*st**2*(1 - 2*C))) + 35*k1*(b2*k3**2 + 2*g2*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 - k3**2))*(2*ct*k1*k2 + k1**2 + k2**2*(ct**2 + st**2))) + 7*bE11*f*k1*k3**2*(6*ct*k1*k2 + 3*k1**2 + k2**2*(3*ct**2 + st**2)))) + alphak3*k3**2*(210*alphak2*b1**3*fNL*k1*k3**2 + 70*b1**2*k1*(alphak2*f*fNL*(ct**2*(k2**2 + k3**2) + 2*ct*k1*k2 + k1**2 + k2**2*st**2 + k3**2*st**2 + k3**2) + 3*bE02*k3**2) + 7*b1*(-5*bE01**2*(2*ct*f*k2*k3**2 - 2*ct*k1**2*k2*(-3*K + f + 3) + k1**3*(3*K - 3) - k1*(ct**2*k2**2*(-3*K + 2*f + 3) + 2*f*k2**2*st**2 + k3**2*(3*K + 3))) + 30*bE01*bE11*k1*k3**2 + 2*f*k1*(alphak2*f*fNL*(3*ct**4*k2**2 + 3*ct**2*(2*k2**2*st**2 + k2**2 + k3**2) + 6*ct*k1*k2*(ct**2 + st**2 + 1) + k1**2*(3*ct**2 + st**2 + 3) + st**2*(3*k2**2*st**2 + k2**2 + k3**2)) + 5*bE02*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 + k2**2*st**2 + k3**2))) - 7*bE01**2*(2*f**2*k2**2*(3*ct**3*k2 + 3*ct**2*k1 + 3*ct*k2*st**2 + k1*st**2) + 5*f*(ct*k1**2*k2*(ct**2*(4*C - 3) + st**2*(4*C - 3) - 4) - ct*k2*(ct**2 + st**2)*(k2**2 - k3**2) + k1**3*(ct**2*(2*C - 1) + st**2*(2*C - 1) - 2) + k1*(ct**4*k2**2*(2*C - 2) + ct**2*(k2**2*(st**2*(2*C - 2) - 3) + k3**2*(1 - 2*C)) + st**2*(-k2**2 + k3**2*(1 - 2*C)))) - 15*k1*(b2*k3**2 + 2*g2*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 - k3**2))) + 35*bE01*bE11*f*k1*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 + k2**2*st**2 + k3**2) + 2*f**2*k1*(3*alphak2*f*fNL*(5*ct**4*k2**2 + 10*ct**3*k1*k2 + ct**2*(5*k1**2 + 6*k2**2*st**2) + 6*ct*k1*k2*st**2 + st**2*(k1**2 + k2**2*st**2)) + 7*bE02*(6*ct*k1*k2 + 3*k1**2 + k2**2*(3*ct**2 + st**2)))) + 7*bE01*k3**4*(5*bE01**2*(-ct*k2*(f - 3) + 3*k1) + 15*bE01*bE11*k1 + 2*k1*(15*alphak2*b1**2*fNL + 5*b1*(alphak2*f*fNL*(ct**2 + st**2 + 1) + 3*bE02) + f*(alphak2*f*fNL*(3*ct**2 + st**2) + 5*bE02)))) + 21*bE01*k1*(alphak3**2*(bE01*(15*b1*k1*k3**2*(ct*k2 + k1) + 3*f**2*k2*(ct**4*k2**3 + 3*ct**3*k1*k2**2 + ct**2*(3*k1**2*k2 + 2*k2**3*st**2) + ct*(k1**3 + 3*k1*k2**2*st**2) + k2*st**2*(k1**2 + k2**2*st**2)) + 5*f*(b1*k2**2*k3**2*(ct**2 + st**2) + 3*ct*k1**3*k2 + ct*k1*k2*(b1*k3**2 + ct**2*k2**2 + k2**2*st**2) + k1**4 + k1**2*k2**2*(3*ct**2 + st**2))) + 5*bE11*k3**2*(3*b1*k3**2 + f*(2*ct*k1*k2 + k1**2 + k2**2*(ct**2 + st**2)))) + alphak3*k3**2*(2*alphak2*fNL*(15*b1**2*k3**2 + 5*b1*f*(2*ct*k1*k2 + k1**2 + (ct**2 + st**2)*(k2**2 + k3**2)) + f**2*(3*ct**4*k2**2 + 6*ct**3*k1*k2 + 3*ct**2*(k1**2 + 2*k2**2*st**2) + 6*ct*k1*k2*st**2 + st**2*(k1**2 + 3*k2**2*st**2))) + 5*bE01**2*(ct*k1*k2*(f + 3) + f*k2**2*(ct**2 + st**2) + 3*k1**2) + 15*bE01*bE11*k3**2 + 10*bE02*(3*b1*k3**2 + f*(2*ct*k1*k2 + k1**2 + k2**2*(ct**2 + st**2)))) + 10*bE01*k3**4*(alphak2*fNL*(3*b1 + f*(ct**2 + st**2)) + 3*bE02)))/(315*alphak1**2*alphak3**2*k1*k3**4)
        perm23 = 2*np.sqrt(np.pi)*D1**4*Pk2*Pk3*(alphak2**2*(-alphak3**2*(105*b1**3*k3**2*(3*K*k2*(k2**2 - k3**2) + 3*ct**2*k1**2*k2*(K - 1) - ct*k1*k2**2*(-6*K + f + 3) + ct*k1*k3**2*(f + 3) - f*k1**2*k2) + 21*b1**2*(5*ct**4*f*k1**2*k2*(K - 1)*(k2**2 + k3**2) + ct**3*f*k1*(10*K*k2**2*k3**2 + k1**2*k2**2*(10*K - 10) + k2**4*(10*K - 3*f - 5) + k3**4*(3*f + 5)) + ct**2*k2*(3*f**2*k1**2*(-3*k2**2 + 2*k3**2) + 5*f*(K*(k2**4 - k3**4) + k1**4*(K - 1) + k1**2*(k2**2*(K*(st**2 + 4) - st**2 - 2) + k3**2*(2*C + st**2*(K - 1)))) - 30*g2*k1**2*k3**2) + ct*k1*(f**2*(k1**2*(-9*k2**2 + 6*k3**2) + st**2*(-3*k2**4 + 3*k3**4)) + 5*f*(4*C*k2**2*k3**2 + 2*K*k2**2*(k2**2*(st**2 + 1) + k3**2*(st**2 - 1)) + k1**2*(k2**2*(2*K - 1) + k3**2) - k2**4*st**2 - 3*k2**2*k3**2 + k3**4*st**2 + k3**4) - 60*g2*k2**2*k3**2) + k2*(-15*b2*k3**4 + f**2*(-3*k1**4 + k1**2*st**2*(-3*k2**2 + 2*k3**2)) + 5*f*(k2**2 - k3**2)*(K*(k1**2 + st**2*(k2**2 + k3**2)) + k3**2*(2*C - 1)) - 30*g2*k3**2*(k2**2 - k3**2))) + 3*b1*f*(21*ct**6*f*k1**2*k2**3*(K - 1) - 3*ct**5*f*k1*k2**2*(k1**2*(14 - 14*K) + k2**2*(-14*K + 5*f + 7) - k3**2*(5*f + 7)) + ct**4*k2*(15*f**2*k1**2*(-2*k2**2 + 3*k3**2) + 21*f*(K*k2**2*(k2**2 - k3**2) + k1**4*(K - 1) + 2*k1**2*(C*k3**2 + k2**2*(C + (K - 1)*(st**2 + 2)))) - 70*g2*k1**2*(k2**2 + k3**2)) + ct**3*k1*(30*f**2*(k1**2*k3**2 + k2**2*st**2*(-k2**2 + k3**2)) + 21*f*(k1**2*(k2**2*(4*C + 2*K*(st**2 + 1) - 2*st**2 - 5) + k3**2) + k2**4*(4*C + K*(4*st**2 + 2) - 2*st**2 - 3) + 2*k2**2*k3**2*(2*C - K + st**2 - 1) + k3**4) - 140*g2*k2**2*(k1**2 + k2**2 + k3**2)) + ct**2*k2*(-35*b2*k3**2*(k2**2 + k3**2) + 6*f**2*k1**2*(5*k1**2 + st**2*(-6*k2**2 + 9*k3**2)) + 7*f*(k1**4*(6*C + st**2*(K - 1) - 6) + k1**2*(k2**2*(2*C*(st**2 + 12) + 3*K*(st**4 + 4*st**2 + 1) - 3*st**4 - 8*st**2 - 18) + k3**2*(-3*K + st**2*(2*C + 4) + 6)) + (3*k2**2 - 3*k3**2)*(k2**2*(2*C + 2*K*st**2 - 1) + k3**2*(2*C - 1))) - 70*g2*(k1**4 + k1**2*(k2**2*(st**2 + 4) + k3**2*st**2) + k2**4 - k3**4)) + ct*k1*(3*f**2*(5*k1**4 + 6*k1**2*k3**2*st**2 + 5*k2**2*st**4*(-k2**2 + k3**2)) + 7*f*(k1**2*(k2**2*(12*C + st**2*(2*K - 1) - 9) + k3**2*(st**2 + 3)) + k2**4*(4*C*(st**2 + 3) + st**4*(6*K - 3) + st**2*(6*K - 3) - 6) + k2**2*k3**2*(4*C*(st**2 - 3) + 3*st**4 - st**2*(6*K + 2) + 6) + k3**4*st**2) - 70*k2**2*(b2*k3**2 + 2*g2*(k1**2 + k2**2*(st**2 + 1) + k3**2*(st**2 - 1)))) + k2*(f**2*(6*k1**4*st**2 + 3*k1**2*st**4*(-2*k2**2 + 3*k3**2)) + 7*f*(k2**2 - k3**2)*(k1**2*(6*C + K*st**2 - 3) + st**2*(k2**2*(2*C + 3*K*st**2 - 1) + k3**2*(2*C - 1))) + (k1**2 + st**2*(k2**2 + k3**2))*(-35*b2*k3**2 - 70*g2*(k2**2 - k3**2)))) + f**2*(ct**6*k1**2*k2**3*(35*f**2 + f*(90*C - 90) - 126*g2) + 3*ct**5*k1*k2**2*(35*f**2*k1**2 + 15*f*(k1**2*(4*C - 4) + k2**2*(4*C - 3) + k3**2) - 84*g2*(k1**2 + k2**2)) + 3*ct**4*k2*(-21*b2*k2**2*k3**2 + 5*f**2*(7*k1**4 + 5*k1**2*k2**2*st**2) + 3*f*(k1**4*(10*C - 10) + 2*k1**2*(k2**2*(6*C*st**2 + 20*C - 6*st**2 - 15) + 5*k3**2) + k2**2*(10*C - 5)*(k2**2 - k3**2)) - 42*g2*(k1**4 + 2*k1**2*k2**2*(st**2 + 2) + k2**4 - k2**2*k3**2)) + ct**3*k1*(5*f**2*(7*k1**4 + 30*k1**2*k2**2*st**2) + 9*f*(k1**2*(k2**2*(4*C*(3*st**2 + 5) - 12*st**2 - 15) + 5*k3**2) + 2*k2**2*(k2**2*(2*C*(6*st**2 + 5) - 9*st**2 - 5) + k3**2*(-10*C + 3*st**2 + 5))) - 126*k2**2*(b2*k3**2 + 2*g2*(k1**2*(st**2 + 1) + 2*k2**2*st**2 + k2**2 - k3**2))) + 3*ct**2*k2*(-21*b2*k3**2*(k1**2 + 2*k2**2*st**2) + 15*f**2*(2*k1**4*st**2 + k1**2*k2**2*st**4) + 3*f*(k1**4*st**2*(2*C - 2) + k1**2*(k2**2*(2*C*(st**4 + 12*st**2 + 5) - 2*st**4 - 18*st**2 - 5) + k3**2*(-10*C + 6*st**2 + 5)) + k2**2*st**2*(12*C - 6)*(k2**2 - k3**2)) - 14*g2*(k1**4*st**2 + 3*k1**2*(k2**2*(st**4 + 4*st**2 + 1) - k3**2) + 6*k2**2*st**2*(k2**2 - k3**2))) + 3*ct*k1*st**2*(5*f**2*(k1**4 + 3*k1**2*k2**2*st**2) + 3*f*(k1**2*(k2**2*(4*C - 3) + k3**2) + k2**4*(4*C*(st**2 + 3) - 3*st**2 - 6) + k2**2*k3**2*(-12*C + st**2 + 6)) - 14*k2**2*(3*b2*k3**2 + 2*g2*(k1**2 + 3*k2**2*(st**2 + 1) - 3*k3**2))) + k2*st**2*(f**2*(9*k1**4*st**2 + 5*k1**2*k2**2*st**4) + f*(18*C - 9)*(k1**2 + k2**2*st**2)*(k2**2 - k3**2) - (k1**2 + 3*k2**2*st**2)*(21*b2*k3**2 + 42*g2*(k2**2 - k3**2))))) - 3*alphak3*k3**2*(35*b1**2*(bE01*(3*ct**2*k1**2*k2*(K - 1) + ct*k1*(2*f*k3**2 - k2**2*(-6*K + f + 3)) + k2*(3*K*k2**2 - 3*K*k3**2 - f*k1**2 - 3*k3**2)) - 3*bE11*k2*k3**2) + 7*b1*(bE01*(5*ct**4*f*k1**2*k2*(K - 1) + 2*ct**3*f*k1*(3*f*k3**2 + k2**2*(5*K - 5)) + ct**2*k2*(6*f**2*k1**2 + 5*f*(k1**2*(2*C + st**2*(K - 1) - 4) + k2**2*(K - 1) - k3**2*(K + 1)) - 30*g2*k1**2) + ct*k1*(6*f**2*(k1**2 + k3**2*st**2) - 5*f*(k1**2 + k2**2*(-4*C - st**2*(2*K - 2) + 5) - k3**2) - 60*g2*k2**2) + k2*(-15*b2*k3**2 + 2*f**2*k1**2*st**2 - 5*f*(k1**2 + k2**2*(-2*C - st**2*(K - 1) + 1) + k3**2*(2*C + st**2*(K + 1) - 1)) - 30*g2*(k2**2 - k3**2))) - 5*bE11*f*k2*(2*ct*k1*k2 + k1**2 + (ct**2 + st**2)*(k2**2 + k3**2))) + f*(bE01*(3*ct**5*f*k1*k2**2*(5*f - 7) + ct**4*k2*(45*f**2*k1**2 + f*k1**2*(42*C - 84) - 21*f*k2**2 - 70*g2*k1**2) + ct**3*k1*(30*f**2*(k1**2 + k2**2*st**2) - 21*f*(k1**2 + k2**2*(-4*C + 2*st**2 + 5) - k3**2) - 140*g2*k2**2) + ct**2*k2*(-35*b2*k3**2 + 54*f**2*k1**2*st**2 + 7*f*(k1**2*(st**2*(2*C - 8) - 3) + 3*k2**2*(2*C - 2*st**2 - 1) + 3*k3**2*(1 - 2*C)) - 70*g2*(k1**2*st**2 + k2**2 - k3**2)) + ct*k1*st**2*(3*f**2*(6*k1**2 + 5*k2**2*st**2) - 7*f*(k1**2 + k2**2*(-4*C + 3*st**2 + 9) - k3**2) - 140*g2*k2**2) - k2*st**2*(35*b2*k3**2 - 9*f**2*k1**2*st**2 + 7*f*(k1**2 + k2**2*(-2*C + 3*st**2 + 1) + k3**2*(2*C - 1)) + 70*g2*(k2**2 - k3**2))) - 7*bE11*f*k2*(3*ct**4*k2**2 + 6*ct**3*k1*k2 + 3*ct**2*(k1**2 + 2*k2**2*st**2) + 6*ct*k1*k2*st**2 + st**2*(k1**2 + 3*k2**2*st**2)))) - 21*bE01*k3**4*(5*b1*(bE01*ct*k1*(f - 3) - 3*bE01*k2 - 3*bE11*k2) + f*(ct**2 + st**2)*(bE01*ct*k1*(3*f - 5) - 5*bE01*k2 - 5*bE11*k2))) + 3*alphak2*(alphak3**2*(bE01*(3*ct**5*f**2*k1*k2**4*(5*f + 7) + ct**4*f*k2**3*(-35*b1*k1**2*(K - 1) + 30*f**2*k1**2 + 21*f*(k1**2*(4 - 2*C) + k2**2) + 70*g2*k1**2) + ct**3*f*k1*k2**2*(-14*b1*(k1**2*(5*K - 5) + k2**2*(5*K - 3*f - 5)) + 30*f**2*k2**2*st**2 - 21*f*(k1**2*(4*C - 5) + k2**2*(4*C - 2*st**2 - 5) + k3**2) + 140*g2*(k1**2 + k2**2)) + ct**2*k2*(-105*b1**2*k1**2*k3**2*(K - 1) + 7*b1*(6*f**2*k1**2*(3*k2**2 - k3**2) - 5*f*(k1**4*(K - 1) + k1**2*(2*C*k3**2 + k2**2*(K - 1)*(st**2 + 4)) + k2**4*(K - 1) - k2**2*k3**2*(K + 1)) + 30*g2*k1**2*k3**2) + f*(35*b2*k2**2*k3**2 - 6*f**2*(5*k1**4 - 6*k1**2*k2**2*st**2) - 7*f*(k1**4*(6*C - 6) + k1**2*(k2**2*(2*C*(st**2 + 12) - 8*st**2 - 21) + 6*k3**2) + 3*k2**2*(k2**2*(2*C - 2*st**2 - 1) + k3**2*(1 - 2*C))) + 70*g2*(k1**4 + k1**2*k2**2*(st**2 + 4) + k2**4 - k2**2*k3**2))) + ct*k1*(-105*b1*k3**2*(b1*(k2**2*(2*K - 2) + k3**2) - 4*g2*k2**2) - 15*f**3*(k1**4 - k2**4*st**4) + 7*f**2*(k1**2*(k2**2*(-12*C + 18*b1 + st**2 + 9) + k3**2*(-6*b1 - 3)) + k2**4*(-4*C*(st**2 + 3) + 3*st**4 + 3*st**2*(2*b1 + 3) + 6) + k2**2*k3**2*(12*C - st**2 - 6)) + 35*f*(b1**2*(2*k2**2*k3**2 - k3**4) - b1*(k1**2*(k2**2*(2*K - 2) + k3**2) + k2**4*(2*K - 2)*(st**2 + 1) + k2**2*k3**2*(4*C - 2*K - 3) + k3**4) + 2*k2**2*(b2*k3**2 + 2*g2*(k1**2 + k2**2*(st**2 + 1) - k3**2)))) + k2*(35*b1**2*k3**2*(3*K*k3**2 + 2*f*k1**2 - k2**2*(3*K - 3)) + 7*b1*(15*b2*k3**4 + 2*f**2*k1**2*(3*k1**2 + st**2*(3*k2**2 - k3**2)) - 5*f*(k1**2*(-K*k3**2 + k2**2*(K - 1)) + k2**4*st**2*(K - 1) + k2**2*k3**2*(2*C - st**2*(K + 1) - 1) + k3**4*(1 - 2*C)) + 30*g2*k3**2*(k2**2 - k3**2)) + f*(f**2*(-6*k1**4*st**2 + 6*k1**2*k2**2*st**4) - 7*f*(k1**2*(k2**2*(6*C - st**2 - 3) + k3**2*(3 - 6*C)) + k2**2*st**2*(k2**2*(2*C - 3*st**2 - 1) + k3**2*(1 - 2*C))) + (k1**2 + k2**2*st**2)*(35*b2*k3**2 + 70*g2*(k2**2 - k3**2))))) + 7*bE11*k2*k3**2*(15*b1**2*k3**2 + 5*b1*f*(2*ct*k1*k2 + k1**2 + (ct**2 + st**2)*(k2**2 + k3**2)) + f**2*(3*ct**4*k2**2 + 6*ct**3*k1*k2 + 3*ct**2*(k1**2 + 2*k2**2*st**2) + 6*ct*k1*k2*st**2 + st**2*(k1**2 + 3*k2**2*st**2)))) + alphak3*k3**2*(7*bE01**2*(10*ct**3*f*k1*k2**2 + ct**2*k2*(-15*b1*k1**2*(K - 1) - 6*f**2*k1**2 + f*k1**2*(20 - 10*C) + 10*f*k2**2 + 30*g2*k1**2) + ct*k1*(-6*f**2*k1**2 + 5*f*(k1**2 + k2**2*(-4*C + 2*b1 + 2*st**2 + 5) - k3**2*(2*b1 + 1)) + k2**2*(-30*K*b1 + 30*b1 + 60*g2)) + k2*(-15*b1*k2**2*(K - 1) + 15*b1*k3**2*(K + 1) + 15*b2*k3**2 - 2*f**2*k1**2*st**2 + 5*f*(k1**2*(2*b1 + 1) + k2**2*(-2*C + 2*st**2 + 1) + k3**2*(2*C - 1)) + 30*g2*k2**2 - 30*g2*k3**2)) + 35*bE01*bE11*k2*(6*b1*k3**2 + f*(2*ct*k1*k2 + k1**2 + (ct**2 + st**2)*(k2**2 + k3**2))) + 2*k2*(105*alphak1*b1**3*fNL*k3**2 + 35*b1**2*(alphak1*f*fNL*(ct**2*(k2**2 + k3**2) + 2*ct*k1*k2 + k1**2 + k2**2*st**2 + k3**2*st**2 + k3**2) + 3*bE02*k3**2) + 7*b1*f*(alphak1*f*fNL*(3*ct**4*k2**2 + 3*ct**2*(2*k2**2*st**2 + k2**2 + k3**2) + 6*ct*k1*k2*(ct**2 + st**2 + 1) + k1**2*(3*ct**2 + st**2 + 3) + st**2*(3*k2**2*st**2 + k2**2 + k3**2)) + 5*bE02*(2*ct*k1*k2 + k1**2 + (ct**2 + st**2)*(k2**2 + k3**2))) + f**2*(3*alphak1*f*fNL*(5*ct**4*k2**2 + 10*ct**3*k1*k2 + ct**2*(5*k1**2 + 6*k2**2*st**2) + 6*ct*k1*k2*st**2 + st**2*(k1**2 + k2**2*st**2)) + 7*bE02*(3*ct**4*k2**2 + 6*ct**3*k1*k2 + 3*ct**2*(k1**2 + 2*k2**2*st**2) + 6*ct*k1*k2*st**2 + st**2*(k1**2 + 3*k2**2*st**2))))) + 7*bE01*k3**4*(-5*bE01**2*(ct*k1*(f - 3) - 3*k2) + 15*bE01*bE11*k2 + 2*k2*(15*alphak1*b1**2*fNL + 5*b1*(alphak1*f*fNL*(ct**2 + st**2 + 1) + 3*bE02) + f*(alphak1*f*fNL*(3*ct**2 + st**2) + 5*bE02*(ct**2 + st**2))))) + 21*bE01*k2*(alphak3**2*(bE01*(15*b1*k2*k3**2*(ct*k1 + k2) + 3*f**2*k1*(ct*k2 + k1)*(2*ct*k1*k2 + k1**2 + k2**2*(ct**2 + st**2)) + 5*f*(b1*k1**2*k3**2 + ct**3*k1*k2**3 + ct**2*(2*k1**2*k2**2 + k2**4) + ct*k1*k2*(b1*k3**2 + k1**2 + k2**2*(st**2 + 2)) + k1**2*k2**2 + k2**4*st**2)) + 5*bE11*k3**2*(3*b1*k3**2 + f*(2*ct*k1*k2 + k1**2 + k2**2*(ct**2 + st**2)))) + alphak3*k3**2*(2*alphak1*fNL*(15*b1**2*k3**2 + 5*b1*f*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 + k2**2*st**2 + k3**2) + f**2*(6*ct*k1*k2 + 3*k1**2 + k2**2*(3*ct**2 + st**2))) + 5*bE01**2*(f*k1*(ct*k2 + k1) + 3*k2*(ct*k1 + k2)) + 15*bE01*bE11*k3**2 + 10*bE02*(3*b1*k3**2 + f*(2*ct*k1*k2 + k1**2 + k2**2*(ct**2 + st**2)))) + 10*bE01*k3**4*(alphak1*fNL*(3*b1 + f) + 3*bE02)))/(315*alphak2**2*alphak3**2*k2*k3**4)
        
        return (perm12+perm13+perm23)