import numpy as np
        
#PP stuff
def GR_2(params,betas,mu,phi):
    k1,k2,k3,theta,Pk1,Pk2,Pk3,Pkd1,Pkd2,Pkd3,Pkdd1,Pkdd2,Pkdd3,d,K,C,f,D1,b1,b2,g2 = params
    mu2 = mu*np.cos(theta)+np.sqrt((1-mu**2)) *np.sin(theta)*np.cos(phi)
    st = np.sin(theta)
    ct= np.cos(theta)
    gr1,gr2,grd1,beta6,beta7,beta8,beta9,beta10,beta11,beta12,beta13,beta14,beta15,beta16,beta17,beta18,beta19,betad14,betad15,betad16,betad17,betad18,betad19 = betas
    
    perm12 = D1**4*Pk1*Pk2*b1*(b1*(beta6*k1**2*k2**2*(4*ct**2*k1*k2 + 7*ct*(k1**2 + k2**2) + 10*k1*k2) + beta7*k1**2*k2**2*(8*ct**2*k1*k2 + 7*ct*(k1**2 + k2**2) + 6*k1*k2) + k3**2*(4*ct**2*gr2*k1*k2*(k1**2 + k2**2) + 7*ct*(beta11*k1**2*k2**2 + gr2*(k1**2 + k2**2)**2) + k1*k2*(7*beta12 + 10*gr2)*(k1**2 + k2**2))) + 7*gr2*k1*k2*k3**2*(b2 + 2*g2*(ct**2 - 1))*(k1**2 + k2**2))/(7*k1**3*k2**3*k3**2) + D1**4*Pk1*Pk2*f*k1*mu**5*mu2*(-beta17*gr1 + f**2*gr2)/k2**3 + D1**4*Pk1*Pk2*f*mu**4*mu2**2*(beta10*f*k1*k2*(ct**2*k1*k2 + 2*ct*(k1**2 + k2**2) + 3*k1*k2) + k3**4*(beta13*f - beta17*gr1 - beta18*gr1 + beta9*f + 2*f**2*gr2 - f*gr1**2))/(k2**2*k3**4) + D1**4*Pk1*Pk2*f*mu**3*mu2**3*(2*beta10*f*k1*k2*(ct**2*k1*k2 + 2*ct*(k1**2 + k2**2) + 3*k1*k2) + k3**4*(-2*beta18*gr1 + beta8*f + 2*beta9*f + 2*f**2*gr2 - 2*f*gr1**2))/(k1*k2*k3**4) + D1**4*Pk1*Pk2*f*mu**2*mu2**4*(beta10*f*k1*k2*(ct**2*k1*k2 + 2*ct*(k1**2 + k2**2) + 3*k1*k2) + k3**4*(beta13*f - beta17*gr1 - beta18*gr1 + beta9*f + 2*f**2*gr2 - f*gr1**2))/(k1**2*k3**4) + D1**4*Pk1*Pk2*f*k2*mu*mu2**5*(-beta17*gr1 + f**2*gr2)/k1**3 + D1**4*Pk1*Pk2*mu**4*(7*b1*k2*(beta10*f*k1*k2*(ct**2*k1*k2 + 2*ct*(k1**2 + k2**2) + 3*k1*k2) + k3**4*(beta13*f - beta17*gr1 + beta9*f + f**2*gr2)) + f**2*gr2*k1*k3**2*(8*ct**2*k1*k2 + 7*ct*(k1**2 + k2**2) + 6*k1*k2))/(7*k2**3*k3**4) + D1**4*Pk1*Pk2*mu**3*mu2*(7*b1*(2*beta10*f*k1*k2**3*(ct**2*k1*k2 + 2*ct*(k1**2 + k2**2) + 3*k1*k2) + k3**4*(-beta17*gr1*k1**2 - beta18*gr1*k2**2 + 2*f**2*gr2*(k1**2 + k2**2) + f*k2**2*(beta8 + 2*beta9 - gr1**2))) + f*k3**2*(-7*beta14*gr1*k1**2*k3**2 - 7*beta16*gr1*k2**2*k3**2 + beta19*gr1*k1*k2*(8*ct**2*k1*k2 + 7*ct*(k1**2 + k2**2) + 6*k1*k2) - 8*ct**2*k1**2*k2**2*(-2*f*gr2 + gr1**2) - 7*ct*k1*k2*(beta15*gr1*k3**2 - 2*f*gr2*(k1**2 + k2**2) + gr1**2*(k1**2 + k2**2)) + 12*f*gr2*k1**2*k2**2 - 6*gr1**2*k1**2*k2**2))/(7*k1*k2**3*k3**4) + D1**4*Pk1*Pk2*mu**2*mu2**2*(7*b1*(k1**2 + k2**2)*(beta10*f*k1*k2*(ct**2*k1*k2 + 2*ct*(k1**2 + k2**2) + 3*k1*k2) + k3**4*(beta13*f - beta18*gr1 + beta9*f + 3*f**2*gr2 - f*gr1**2)) + f*k3**2*(7*beta11*ct*f*k1*k2*k3**2 + 7*beta12*f*k1**2*k3**2 + 7*beta12*f*k2**2*k3**2 - 7*beta14*gr1*k1**2*k3**2 - 7*beta14*gr1*k2**2*k3**2 - 14*beta15*ct*gr1*k1*k2*k3**2 - 7*beta16*gr1*k1**2*k3**2 - 7*beta16*gr1*k2**2*k3**2 + 16*beta19*ct**2*gr1*k1**2*k2**2 + 14*beta19*ct*gr1*k1**3*k2 + 14*beta19*ct*gr1*k1*k2**3 + 12*beta19*gr1*k1**2*k2**2 + beta6*f*k1*k2*(4*ct**2*k1*k2 + 7*ct*(k1**2 + k2**2) + 10*k1*k2) + beta7*f*k1*k2*(8*ct**2*k1*k2 + 7*ct*(k1**2 + k2**2) + 6*k1*k2) + 16*ct**2*f*gr2*k1**2*k2**2 - 16*ct**2*gr1**2*k1**2*k2**2 + 14*ct*f*gr2*k1**3*k2 + 14*ct*f*gr2*k1*k2**3 - 14*ct*gr1**2*k1**3*k2 - 14*ct*gr1**2*k1*k2**3 + 12*f*gr2*k1**2*k2**2 - 12*gr1**2*k1**2*k2**2))/(7*k1**2*k2**2*k3**4) + D1**4*Pk1*Pk2*mu**2*(7*b1**2*k2*(beta10*k1**3*k2*(ct**2*k1*k2 + 2*ct*(k1**2 + k2**2) + 3*k1*k2) + k3**4*(beta13*k1**2 + beta9*k1**2 + f*gr2*(k1**2 + k2**2))) + b1*k3**2*(4*ct**2*k1**2*k2*(2*beta19*gr1*k2**2 + f*gr2*(2*k1**2 + 2*k2**2 + k3**2) + f*k2**2*(beta6 + 2*beta7)) + 7*ct*k1*(f*(gr2*(k1**2 + k2**2)*(k1**2 + k2**2 + k3**2) + k2**2*(beta11*k3**2 + beta6*(k1**2 + k2**2) + beta7*(k1**2 + k2**2))) + gr1*k2**2*(-beta15*k3**2 + beta19*(k1**2 + k2**2))) + k2*(f*(7*beta12*k1**2*k3**2 + 7*beta12*k2**2*k3**2 + 10*beta6*k1**2*k2**2 + 6*beta7*k1**2*k2**2 + 2*gr2*k1**2*(3*k1**2 + 3*k2**2 + 5*k3**2)) + gr1*(6*beta19*k1**2*k2**2 - 7*k3**2*(beta14*k1**2 + beta16*k2**2)))) + 7*f*gr2*k1**2*k2*k3**4*(b2 + 2*g2*(ct**2 - 1)))/(7*k1**2*k2**3*k3**4) + D1**4*Pk1*Pk2*mu2**4*(7*b1*k1*(beta10*f*k1*k2*(ct**2*k1*k2 + 2*ct*(k1**2 + k2**2) + 3*k1*k2) + k3**4*(beta13*f - beta17*gr1 + beta9*f + f**2*gr2)) + f**2*gr2*k2*k3**2*(8*ct**2*k1*k2 + 7*ct*(k1**2 + k2**2) + 6*k1*k2))/(7*k1**3*k3**4) + D1**4*Pk1*Pk2*mu*mu2**3*(7*b1*(2*beta10*f*k1**3*k2*(ct**2*k1*k2 + 2*ct*(k1**2 + k2**2) + 3*k1*k2) + k3**4*(-beta17*gr1*k2**2 - beta18*gr1*k1**2 + beta8*f*k1**2 + 2*beta9*f*k1**2 + 2*f**2*gr2*k1**2 + 2*f**2*gr2*k2**2 - f*gr1**2*k1**2)) + f*k3**2*(-7*beta14*gr1*k2**2*k3**2 - 7*beta16*gr1*k1**2*k3**2 + beta19*gr1*k1*k2*(8*ct**2*k1*k2 + 7*ct*(k1**2 + k2**2) + 6*k1*k2) - 8*ct**2*k1**2*k2**2*(-2*f*gr2 + gr1**2) - 7*ct*k1*k2*(beta15*gr1*k3**2 - 2*f*gr2*(k1**2 + k2**2) + gr1**2*(k1**2 + k2**2)) + 12*f*gr2*k1**2*k2**2 - 6*gr1**2*k1**2*k2**2))/(7*k1**3*k2*k3**4) + D1**4*Pk1*Pk2*mu2**2*(7*b1**2*k1*(beta10*k1*k2**3*(ct**2*k1*k2 + 2*ct*(k1**2 + k2**2) + 3*k1*k2) + k3**4*(f*gr2*(k1**2 + k2**2) + k2**2*(beta13 + beta9))) + b1*k3**2*(7*beta11*ct*f*k1**2*k2*k3**2 + 7*beta12*f*k1**3*k3**2 + 7*beta12*f*k1*k2**2*k3**2 - 7*beta14*gr1*k1*k2**2*k3**2 - 7*beta15*ct*gr1*k1**2*k2*k3**2 - 7*beta16*gr1*k1**3*k3**2 + 8*beta19*ct**2*gr1*k1**3*k2**2 + 7*beta19*ct*gr1*k1**4*k2 + 7*beta19*ct*gr1*k1**2*k2**3 + 6*beta19*gr1*k1**3*k2**2 + beta6*f*k1**2*k2*(4*ct**2*k1*k2 + 7*ct*(k1**2 + k2**2) + 10*k1*k2) + beta7*f*k1**2*k2*(8*ct**2*k1*k2 + 7*ct*(k1**2 + k2**2) + 6*k1*k2) + 8*ct**2*f*gr2*k1**3*k2**2 + 8*ct**2*f*gr2*k1*k2**4 + 4*ct**2*f*gr2*k1*k2**2*k3**2 + 7*ct*f*gr2*k1**4*k2 + 14*ct*f*gr2*k1**2*k2**3 + 7*ct*f*gr2*k1**2*k2*k3**2 + 7*ct*f*gr2*k2**5 + 7*ct*f*gr2*k2**3*k3**2 + 6*f*gr2*k1**3*k2**2 + 6*f*gr2*k1*k2**4 + 10*f*gr2*k1*k2**2*k3**2) + 7*f*gr2*k1*k2**2*k3**4*(b2 + 2*g2*(ct**2 - 1)))/(7*k1**3*k2**2*k3**4) + D1**4*Pk1*Pk2*mu*mu2*(7*b1**2*(2*beta10*k1**3*k2**3*(ct**2*k1*k2 + 2*ct*(k1**2 + k2**2) + 3*k1*k2) + k3**4*(f*gr2*(k1**2 + k2**2)**2 + k1**2*k2**2*(beta8 + 2*beta9))) + b1*k3**2*(-7*beta14*gr1*k1**4*k3**2 - 7*beta14*gr1*k2**4*k3**2 - 14*beta16*gr1*k1**2*k2**2*k3**2 + beta19*gr1*k1*k2*(k1**2 + k2**2)*(8*ct**2*k1*k2 + 7*ct*(k1**2 + k2**2) + 6*k1*k2) + 4*ct**2*k1**2*k2**2*(4*f*gr2*(k1**2 + k2**2) - gr1**2*k3**2) + 7*ct*k1*k2*(k1**2 + k2**2)*(2*f*gr2*(k1**2 + k2**2) - gr1*k3**2*(beta15 + gr1)) + 12*f*gr2*k1**4*k2**2 + 12*f*gr2*k1**2*k2**4 - 10*gr1**2*k1**2*k2**2*k3**2) - 7*gr1**2*k1**2*k2**2*k3**4*(b2 + 2*g2*(ct**2 - 1)))/(7*k1**3*k2**3*k3**4)
    perm13 = D1**4*Pk1*Pk3*b1*(b1*(gr2*k2**2*(k1**2 + k3**2)*(4*ct**2*k1*k2**2 + ct*k1**2*k2 - 7*ct*k2*k3**2 - 3*k1**3 + 3*k1*k3**2) + k1*k3**2*(beta6*k1*(4*ct**2*k1*k2**2 + ct*k1**2*k2 - 7*ct*k2*k3**2 - 3*k1**3 + 3*k1*k3**2) + beta7*k1*(8*ct**2*k1*k2**2 + 9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 - k1*k3**2) + 7*k2**2*(-beta11*k1*(ct*k2 + k1) + beta12*(k1**2 + k3**2)))) + 7*gr2*k1*k2**2*(k1**2 + k3**2)*(b2*k3**2 + 2*g2*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 - k3**2)))/(7*k1**3*k2**2*k3**4) + D1**4*Pk1*Pk3*f**2*k1**2*mu**6*(2*beta13 - beta8)/k3**4 + 3*D1**4*Pk1*Pk3*f**2*k1*k2*mu**5*mu2*(2*beta13 - beta8)/k3**4 - D1**4*Pk1*Pk3*f*mu**4*mu2**2*(beta10*f*k1*(2*ct*k2*k3**2 + k1**3 - k1*(ct**2*k2**2 + k3**2)) + k2**4*(-7*beta13*f - 3*beta17*gr1 + beta18*gr1 + 3*beta8*f - beta9*f + 2*f**2*gr2 + f*gr1**2))/(k2**2*k3**4) + D1**4*Pk1*Pk3*f*mu**4*(beta6*f*k1*(4*ct**2*k1*k2**2 + ct*k1**2*k2 - 7*ct*k2*k3**2 - 3*k1**3 + 3*k1*k3**2) + beta7*f*k1*(8*ct**2*k1*k2**2 + 9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 - k1*k3**2) - 7*k2**2*(-b1*(2*beta13 - beta8)*(k1**2 + k3**2) + beta11*f*k1*(ct*k2 + k1) - beta12*f*(k1**2 + k3**2)))/(7*k2**2*k3**4) - D1**4*Pk1*Pk3*f*mu**3*mu2**3*(2*beta10*f*k1*(2*ct*k2*k3**2 + k1**3 - k1*(ct**2*k2**2 + k3**2)) + k2**4*(-4*beta13*f - 6*beta17*gr1 + 2*beta18*gr1 + beta8*f - 2*beta9*f + 4*f**2*gr2 + 2*f*gr1**2))/(k1*k2*k3**4) - D1**4*Pk1*Pk3*f*mu**2*mu2**4*(beta10*f*k1*(2*ct*k2*k3**2 + k1**3 - k1*(ct**2*k2**2 + k3**2)) + k2**4*(-beta13*f - 4*beta17*gr1 + beta18*gr1 - beta9*f + 3*f**2*gr2 + f*gr1**2))/(k1**2*k3**4) + D1**4*Pk1*Pk3*f*k2**5*mu*mu2**5*(beta17*gr1 - f**2*gr2)/(k1**3*k3**4) + D1**4*Pk1*Pk3*mu**3*mu2*(2*beta6*f**2*k1*(4*ct**2*k1*k2**2 + ct*k1**2*k2 - 7*ct*k2*k3**2 - 3*k1**3 + 3*k1*k3**2) + 2*beta7*f**2*k1*(8*ct**2*k1*k2**2 + 9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 - k1*k3**2) - 7*k2**2*(b1*(-2*beta13*f*(3*k1**2 + k3**2) + beta8*f*(3*k1**2 + k3**2) + (k1**2 - k3**2)*(3*beta17*gr1 - beta18*gr1 - f*(2*f*gr2 + gr1**2))) + f*(2*beta11*f*k1*(ct*k2 + k1) - 2*beta12*f*(k1**2 + k3**2) + gr1*(beta14 - beta16)*(k1**2 - k3**2))))/(7*k1*k2*k3**4) - D1**4*Pk1*Pk3*mu**2*mu2**2*(7*b1*(beta10*f*k1*(k1**2 + k3**2)*(2*ct*k2*k3**2 + k1**3 - k1*(ct**2*k2**2 + k3**2)) - k2**4*(beta13*f*(7*k1**2 + k3**2) - 6*beta17*gr1*k1**2 + 3*beta17*gr1*k3**2 + 2*beta18*gr1*k1**2 - beta18*gr1*k3**2 - 3*beta8*f*k1**2 + beta9*f*k1**2 + beta9*f*k3**2 + 3*f**2*gr2*k1**2 - 3*f**2*gr2*k3**2 + 2*f*gr1**2*k1**2 - f*gr1**2*k3**2)) + f*k2**2*(7*beta11*ct*f*k1*k2**3 + 7*beta11*f*k1**2*k2**2 - 7*beta12*f*k1**2*k2**2 - 7*beta12*f*k2**2*k3**2 + 7*beta14*gr1*k1**2*k2**2 - 14*beta14*gr1*k2**2*k3**2 + 7*beta15*ct*gr1*k1*k2**3 + 7*beta15*gr1*k1**2*k2**2 - 14*beta16*gr1*k1**2*k2**2 + 7*beta16*gr1*k2**2*k3**2 + 8*beta19*ct**2*gr1*k1**2*k2**2 + 9*beta19*ct*gr1*k1**3*k2 - 7*beta19*ct*gr1*k1*k2*k3**2 + beta19*gr1*k1**4 - beta19*gr1*k1**2*k3**2 + beta6*f*k1*(-4*ct**2*k1*k2**2 - ct*k1**2*k2 + 7*ct*k2*k3**2 + 3*k1**3 - 3*k1*k3**2) - beta7*f*k1*(8*ct**2*k1*k2**2 + 9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 - k1*k3**2) - 16*ct**2*f*gr2*k1**2*k2**2 - 8*ct**2*gr1**2*k1**2*k2**2 - 18*ct*f*gr2*k1**3*k2 + 14*ct*f*gr2*k1*k2*k3**2 - 9*ct*gr1**2*k1**3*k2 + 7*ct*gr1**2*k1*k2*k3**2 - 2*f*gr2*k1**4 + 2*f*gr2*k1**2*k3**2 - gr1**2*k1**4 + gr1**2*k1**2*k3**2))/(7*k1**2*k2**2*k3**4) + D1**4*Pk1*Pk3*mu**2*(7*b1**2*k1**2*k2**2*k3**2*(2*beta13 - beta8) + b1*(-beta6*f*k1*(k1**2 + k3**2)*(-4*ct**2*k1*k2**2 - ct*k1**2*k2 + 7*ct*k2*k3**2 + 3*k1**3 - 3*k1*k3**2) + beta7*f*k1*(k1**2 + k3**2)*(8*ct**2*k1*k2**2 + 9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 - k1*k3**2) + k2**2*(-7*beta11*f*k1*(k1**2 + k3**2)*(ct*k2 + k1) + 7*beta12*f*(k1**2 + k3**2)**2 + 7*beta14*gr1*k1**4 - 14*beta14*gr1*k1**2*k3**2 + 7*beta14*gr1*k3**4 - 7*beta16*gr1*k1**4 + 14*beta16*gr1*k1**2*k3**2 - 7*beta16*gr1*k3**4 + 8*ct**2*f*gr2*k1**2*k2**2 + 4*ct**2*gr1**2*k1**2*k2**2 + 2*ct*f*gr2*k1**3*k2 - 14*ct*f*gr2*k1*k2*k3**2 + ct*gr1**2*k1**3*k2 - 7*ct*gr1**2*k1*k2*k3**2 - 6*f*gr2*k1**4 + 6*f*gr2*k1**2*k3**2 - 3*gr1**2*k1**4 + 3*gr1**2*k1**2*k3**2)) + 7*k1**2*k2**2*(b2*k3**2 + 2*g2*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 - k3**2))*(2*f*gr2 + gr1**2))/(7*k1**2*k2**2*k3**4) - D1**4*Pk1*Pk3*mu2**4*(7*b1*k1*(beta10*f*k1*(2*ct*k2*k3**2 + k1**3 - k1*(ct**2*k2**2 + k3**2)) - k2**4*(beta13*f - beta17*gr1 + beta9*f + f**2*gr2)) - f**2*gr2*k2**2*(8*ct**2*k1*k2**2 + 9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 - k1*k3**2))/(7*k1**3*k3**4) - D1**4*Pk1*Pk3*mu*mu2**3*(7*b1*(2*beta10*f*k1**3*(2*ct*k2*k3**2 + k1**3 - k1*(ct**2*k2**2 + k3**2)) - k2**4*(4*beta13*f*k1**2 - 4*beta17*gr1*k1**2 + beta17*gr1*k3**2 + beta18*gr1*k1**2 - beta8*f*k1**2 + 2*beta9*f*k1**2 + 2*f**2*gr2*k1**2 - 2*f**2*gr2*k3**2 + f*gr1**2*k1**2)) + f*k2**2*(beta19*gr1*k1*(8*ct**2*k1*k2**2 + 9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 - k1*k3**2) - 2*f*gr2*k1*(8*ct**2*k1*k2**2 + 9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 - k1*k3**2) - gr1**2*k1*(8*ct**2*k1*k2**2 + 9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 - k1*k3**2) + 7*gr1*k2**2*(-beta14*k3**2 + beta15*k1*(ct*k2 + k1) - beta16*k1**2)))/(7*k1**3*k2*k3**4) + D1**4*Pk1*Pk3*mu*mu2*(7*b1**2*k2**2*(f*gr2*(k1**4 - k3**4) + k1**2*k3**2*(2*beta13 - beta8)) + b1*(-14*beta11*ct*f*k1**3*k2**3 - 14*beta11*f*k1**4*k2**2 + 14*beta12*f*k1**4*k2**2 + 14*beta12*f*k1**2*k2**2*k3**2 + 7*beta14*gr1*k1**4*k2**2 - 14*beta14*gr1*k1**2*k2**2*k3**2 + 7*beta14*gr1*k2**2*k3**4 + 7*beta15*ct*gr1*k1**3*k2**3 - 7*beta15*ct*gr1*k1*k2**3*k3**2 + 7*beta15*gr1*k1**4*k2**2 - 7*beta15*gr1*k1**2*k2**2*k3**2 - 14*beta16*gr1*k1**4*k2**2 + 14*beta16*gr1*k1**2*k2**2*k3**2 + 8*beta19*ct**2*gr1*k1**4*k2**2 - 8*beta19*ct**2*gr1*k1**2*k2**2*k3**2 + 9*beta19*ct*gr1*k1**5*k2 - 16*beta19*ct*gr1*k1**3*k2*k3**2 + 7*beta19*ct*gr1*k1*k2*k3**4 + beta19*gr1*k1**6 - 2*beta19*gr1*k1**4*k3**2 + beta19*gr1*k1**2*k3**4 + 2*beta6*f*k1**3*(4*ct**2*k1*k2**2 + ct*k1**2*k2 - 7*ct*k2*k3**2 - 3*k1**3 + 3*k1*k3**2) + 2*beta7*f*k1**3*(8*ct**2*k1*k2**2 + 9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 - k1*k3**2) + 8*ct**2*f*gr2*k1**2*k2**4 + 4*ct**2*gr1**2*k1**2*k2**4 + 2*ct*f*gr2*k1**3*k2**3 - 14*ct*f*gr2*k1*k2**3*k3**2 + ct*gr1**2*k1**3*k2**3 - 7*ct*gr1**2*k1*k2**3*k3**2 - 6*f*gr2*k1**4*k2**2 + 6*f*gr2*k1**2*k2**2*k3**2 - 3*gr1**2*k1**4*k2**2 + 3*gr1**2*k1**2*k2**2*k3**2) + 7*k1**2*k2**2*(b2*k3**2 + 2*g2*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 - k3**2))*(2*f*gr2 + gr1**2))/(7*k1**3*k2*k3**4) + D1**4*Pk1*Pk3*mu2**2*(7*b1**2*k1*(f*gr2*k2**4*(k1**2 + k3**2) + k3**2*(beta10*k1*(ct**2*k1*k2**2 - 2*ct*k2*k3**2 - k1**3 + k1*k3**2) + k2**4*(beta13 + beta9))) + b1*k2**2*(-7*beta11*ct*f*k1**2*k2**3 - 7*beta11*f*k1**3*k2**2 + 7*beta12*f*k1**3*k2**2 + 7*beta12*f*k1*k2**2*k3**2 - 7*beta14*gr1*k1*k2**2*k3**2 + 7*beta15*ct*gr1*k1**2*k2**3 + 7*beta15*gr1*k1**3*k2**2 - 7*beta16*gr1*k1**3*k2**2 + 8*beta19*ct**2*gr1*k1**3*k2**2 + 9*beta19*ct*gr1*k1**4*k2 - 7*beta19*ct*gr1*k1**2*k2*k3**2 + beta19*gr1*k1**5 - beta19*gr1*k1**3*k3**2 + beta6*f*k1**2*(4*ct**2*k1*k2**2 + ct*k1**2*k2 - 7*ct*k2*k3**2 - 3*k1**3 + 3*k1*k3**2) + beta7*f*k1**2*(8*ct**2*k1*k2**2 + 9*ct*k1**2*k2 - 7*ct*k2*k3**2 + k1**3 - k1*k3**2) + 8*ct**2*f*gr2*k1**3*k2**2 + 4*ct**2*f*gr2*k1*k2**4 + 8*ct**2*f*gr2*k1*k2**2*k3**2 + 9*ct*f*gr2*k1**4*k2 + ct*f*gr2*k1**2*k2**3 + 2*ct*f*gr2*k1**2*k2*k3**2 - 7*ct*f*gr2*k2**3*k3**2 - 7*ct*f*gr2*k2*k3**4 + f*gr2*k1**5 - 3*f*gr2*k1**3*k2**2 + 3*f*gr2*k1*k2**2*k3**2 - f*gr2*k1*k3**4) + 7*f*gr2*k1*k2**4*(b2*k3**2 + 2*g2*(ct**2*k2**2 + 2*ct*k1*k2 + k1**2 - k3**2)))/(7*k1**3*k2**2*k3**4)
    perm23 = D1**4*Pk2*Pk3*b1*(b1*(4*ct**2*(gr2*k1**4*k2*(k2**2 + k3**2) + k1**2*k2**3*k3**2*(beta6 + 2*beta7)) + ct*(gr2*k1**3*(k2**4 - 6*k2**2*k3**2 - 7*k3**4) + k1*k2**2*k3**2*(-7*beta11*k1**2 + beta6*k2**2 - 7*beta6*k3**2 + 9*beta7*k2**2 - 7*beta7*k3**2)) + 3*gr2*k1**2*k2*(-k2**4 + k3**4) + k2*k3**2*(-7*beta11*k1**2*k2**2 + 7*beta12*k1**2*(k2**2 + k3**2) - k2**2*(3*beta6 - beta7)*(k2**2 - k3**2))) + 7*gr2*k1**2*k2*(k2**2 + k3**2)*(b2*k3**2 + 2*ct**2*g2*k1**2 + 4*ct*g2*k1*k2 + 2*g2*(k2**2 - k3**2)))/(7*k1**2*k2**3*k3**4) + 3*D1**4*Pk2*Pk3*f**2*k1*k2*mu*mu2**5*(2*beta13 - beta8)/k3**4 + D1**4*Pk2*Pk3*f**2*k2**2*mu2**6*(2*beta13 - beta8)/k3**4 + D1**4*Pk2*Pk3*f*k1**5*mu**5*mu2*(beta17*gr1 - f**2*gr2)/(k2**3*k3**4) + D1**4*Pk2*Pk3*f*mu**4*mu2**2*(beta10*ct**2*f*k1**2*k2**2 - 2*beta10*ct*f*k1*k2*k3**2 - beta10*f*k2**4 + beta10*f*k2**2*k3**2 + beta13*f*k1**4 + 4*beta17*gr1*k1**4 - beta18*gr1*k1**4 + beta9*f*k1**4 - 3*f**2*gr2*k1**4 - f*gr1**2*k1**4)/(k2**2*k3**4) - D1**4*Pk2*Pk3*f*mu**3*mu2**3*(-2*beta10*ct**2*f*k1**2*k2**2 + 4*beta10*ct*f*k1*k2*k3**2 + 2*beta10*f*k2**4 - 2*beta10*f*k2**2*k3**2 - 4*beta13*f*k1**4 - 6*beta17*gr1*k1**4 + 2*beta18*gr1*k1**4 + beta8*f*k1**4 - 2*beta9*f*k1**4 + 4*f**2*gr2*k1**4 + 2*f*gr1**2*k1**4)/(k1*k2*k3**4) + D1**4*Pk2*Pk3*f*mu**2*mu2**4*(beta10*ct**2*f*k1**2*k2**2 - 2*beta10*ct*f*k1*k2*k3**2 - beta10*f*k2**4 + beta10*f*k2**2*k3**2 + 7*beta13*f*k1**4 + 3*beta17*gr1*k1**4 - beta18*gr1*k1**4 - 3*beta8*f*k1**4 + beta9*f*k1**4 - 2*f**2*gr2*k1**4 - f*gr1**2*k1**4)/(k1**2*k3**4) - D1**4*Pk2*Pk3*f*mu2**4*(-7*b1*k1**2*(2*beta13 - beta8)*(k2**2 + k3**2) + 7*beta11*f*k1**2*k2*(ct*k1 + k2) - f*(7*beta12*k1**2*(k2**2 + k3**2) + beta6*k2*(4*ct**2*k1**2*k2 + ct*k1*(k2**2 - 7*k3**2) - 3*k2**3 + 3*k2*k3**2) + beta7*k2*(8*ct**2*k1**2*k2 + ct*k1*(9*k2**2 - 7*k3**2) + k2**3 - k2*k3**2)))/(7*k1**2*k3**4) + D1**4*Pk2*Pk3*mu**4*(7*b1*k2*(beta10*ct**2*f*k1**2*k2**2 - 2*beta10*ct*f*k1*k2*k3**2 - beta10*f*k2**4 + beta10*f*k2**2*k3**2 + beta13*f*k1**4 - beta17*gr1*k1**4 + beta9*f*k1**4 + f**2*gr2*k1**4) + f**2*gr2*k1**2*(8*ct**2*k1**2*k2 + ct*k1*(9*k2**2 - 7*k3**2) + k2**3 - k2*k3**2))/(7*k2**3*k3**4) - D1**4*Pk2*Pk3*mu*mu2**3*(7*b1*k1**2*(-2*beta13*f*(3*k2**2 + k3**2) + beta8*f*(3*k2**2 + k3**2) + (k2**2 - k3**2)*(3*beta17*gr1 - beta18*gr1 - f*(2*f*gr2 + gr1**2))) + 14*beta11*f**2*k1**2*k2*(ct*k1 + k2) - f*(14*beta12*f*k1**2*(k2**2 + k3**2) - 7*beta14*gr1*k1**2*k2**2 + 7*beta14*gr1*k1**2*k3**2 + 7*beta16*gr1*k1**2*k2**2 - 7*beta16*gr1*k1**2*k3**2 + 2*beta6*f*k2*(4*ct**2*k1**2*k2 + ct*k1*(k2**2 - 7*k3**2) - 3*k2**3 + 3*k2*k3**2) + 16*beta7*ct**2*f*k1**2*k2**2 + 18*beta7*ct*f*k1*k2**3 - 14*beta7*ct*f*k1*k2*k3**2 + 2*beta7*f*k2**4 - 2*beta7*f*k2**2*k3**2))/(7*k1*k2*k3**4) - D1**4*Pk2*Pk3*mu**3*mu2*(-7*b1*(2*beta10*ct**2*f*k1**2*k2**4 - 4*beta10*ct*f*k1*k2**3*k3**2 - 2*beta10*f*k2**6 + 2*beta10*f*k2**4*k3**2 + 4*beta13*f*k1**4*k2**2 - 4*beta17*gr1*k1**4*k2**2 + beta17*gr1*k1**4*k3**2 + beta18*gr1*k1**4*k2**2 - beta8*f*k1**4*k2**2 + 2*beta9*f*k1**4*k2**2 + 2*f**2*gr2*k1**4*k2**2 - 2*f**2*gr2*k1**4*k3**2 + f*gr1**2*k1**4*k2**2) + 7*beta15*f*gr1*k1**4*k2*(ct*k1 + k2) - f*k1**2*(7*beta14*gr1*k1**2*k3**2 + 7*beta16*gr1*k1**2*k2**2 - beta19*gr1*k2*(8*ct**2*k1**2*k2 + 9*ct*k1*k2**2 - 7*ct*k1*k3**2 + k2**3 - k2*k3**2) + 16*ct**2*f*gr2*k1**2*k2**2 + 8*ct**2*gr1**2*k1**2*k2**2 + 18*ct*f*gr2*k1*k2**3 - 14*ct*f*gr2*k1*k2*k3**2 + 9*ct*gr1**2*k1*k2**3 - 7*ct*gr1**2*k1*k2*k3**2 + 2*f*gr2*k2**4 - 2*f*gr2*k2**2*k3**2 + gr1**2*k2**4 - gr1**2*k2**2*k3**2))/(7*k1*k2**3*k3**4) + D1**4*Pk2*Pk3*mu*mu2*(7*b1**2*k1**2*(f*gr2*(k2**4 - k3**4) + k2**2*k3**2*(2*beta13 - beta8)) + b1*(-14*beta11*f*k1**2*k2**4 + 14*beta12*f*k1**2*k2**4 + 14*beta12*f*k1**2*k2**2*k3**2 + 7*beta14*gr1*k1**2*k2**4 - 14*beta14*gr1*k1**2*k2**2*k3**2 + 7*beta14*gr1*k1**2*k3**4 + 7*beta15*gr1*k1**2*k2**4 - 7*beta15*gr1*k1**2*k2**2*k3**2 - 14*beta16*gr1*k1**2*k2**4 + 14*beta16*gr1*k1**2*k2**2*k3**2 + beta19*gr1*k2**6 - 2*beta19*gr1*k2**4*k3**2 + beta19*gr1*k2**2*k3**4 - 6*beta6*f*k2**6 + 6*beta6*f*k2**4*k3**2 + 2*beta7*f*k2**6 - 2*beta7*f*k2**4*k3**2 + 4*ct**2*k1**2*k2**2*(2*beta19*gr1*(k2**2 - k3**2) + 2*f*(gr2*k1**2 + k2**2*(beta6 + 2*beta7)) + gr1**2*k1**2) + ct*k1*k2*(-14*beta11*f*k1**2*k2**2 + 7*beta15*gr1*k1**2*(k2**2 - k3**2) + 9*beta19*gr1*k2**4 - 16*beta19*gr1*k2**2*k3**2 + 7*beta19*gr1*k3**4 + 2*beta6*f*k2**4 - 14*beta6*f*k2**2*k3**2 + 18*beta7*f*k2**4 - 14*beta7*f*k2**2*k3**2 + 2*f*gr2*k1**2*k2**2 - 14*f*gr2*k1**2*k3**2 + gr1**2*k1**2*k2**2 - 7*gr1**2*k1**2*k3**2) - 6*f*gr2*k1**2*k2**4 + 6*f*gr2*k1**2*k2**2*k3**2 - 3*gr1**2*k1**2*k2**4 + 3*gr1**2*k1**2*k2**2*k3**2) + 7*k1**2*k2**2*(2*f*gr2 + gr1**2)*(b2*k3**2 + 2*ct**2*g2*k1**2 + 4*ct*g2*k1*k2 + 2*g2*(k2**2 - k3**2)))/(7*k1*k2**3*k3**4) - D1**4*Pk2*Pk3*mu**2*mu2**2*(-7*b1*beta10*ct**2*f*k1**2*k2**4 - 7*b1*beta10*ct**2*f*k1**2*k2**2*k3**2 + 14*b1*beta10*ct*f*k1*k2**3*k3**2 + 14*b1*beta10*ct*f*k1*k2*k3**4 + 7*b1*beta10*f*k2**6 - 7*b1*beta10*f*k2**2*k3**4 - 49*b1*beta13*f*k1**4*k2**2 - 7*b1*beta13*f*k1**4*k3**2 + 42*b1*beta17*gr1*k1**4*k2**2 - 21*b1*beta17*gr1*k1**4*k3**2 - 14*b1*beta18*gr1*k1**4*k2**2 + 7*b1*beta18*gr1*k1**4*k3**2 + 21*b1*beta8*f*k1**4*k2**2 - 7*b1*beta9*f*k1**4*k2**2 - 7*b1*beta9*f*k1**4*k3**2 - 21*b1*f**2*gr2*k1**4*k2**2 + 21*b1*f**2*gr2*k1**4*k3**2 - 14*b1*f*gr1**2*k1**4*k2**2 + 7*b1*f*gr1**2*k1**4*k3**2 + 7*beta11*f**2*k1**4*k2*(ct*k1 + k2) - 7*beta12*f**2*k1**4*k2**2 - 7*beta12*f**2*k1**4*k3**2 + 7*beta14*f*gr1*k1**4*k2**2 - 14*beta14*f*gr1*k1**4*k3**2 + 7*beta15*f*gr1*k1**4*k2*(ct*k1 + k2) - 14*beta16*f*gr1*k1**4*k2**2 + 7*beta16*f*gr1*k1**4*k3**2 + 8*beta19*ct**2*f*gr1*k1**4*k2**2 + 9*beta19*ct*f*gr1*k1**3*k2**3 - 7*beta19*ct*f*gr1*k1**3*k2*k3**2 + beta19*f*gr1*k1**2*k2**4 - beta19*f*gr1*k1**2*k2**2*k3**2 - 4*beta6*ct**2*f**2*k1**4*k2**2 - beta6*ct*f**2*k1**3*k2**3 + 7*beta6*ct*f**2*k1**3*k2*k3**2 + 3*beta6*f**2*k1**2*k2**4 - 3*beta6*f**2*k1**2*k2**2*k3**2 - 8*beta7*ct**2*f**2*k1**4*k2**2 - 9*beta7*ct*f**2*k1**3*k2**3 + 7*beta7*ct*f**2*k1**3*k2*k3**2 - beta7*f**2*k1**2*k2**4 + beta7*f**2*k1**2*k2**2*k3**2 - 16*ct**2*f**2*gr2*k1**4*k2**2 - 8*ct**2*f*gr1**2*k1**4*k2**2 - 18*ct*f**2*gr2*k1**3*k2**3 + 14*ct*f**2*gr2*k1**3*k2*k3**2 - 9*ct*f*gr1**2*k1**3*k2**3 + 7*ct*f*gr1**2*k1**3*k2*k3**2 - 2*f**2*gr2*k1**2*k2**4 + 2*f**2*gr2*k1**2*k2**2*k3**2 - f*gr1**2*k1**2*k2**4 + f*gr1**2*k1**2*k2**2*k3**2)/(7*k1**2*k2**2*k3**4) + D1**4*Pk2*Pk3*mu2**2*(7*b1**2*k1**2*k2**2*k3**2*(2*beta13 - beta8) + b1*(-7*beta11*f*k1**2*k2**4 - 7*beta11*f*k1**2*k2**2*k3**2 + 7*beta12*f*k1**2*k2**4 + 14*beta12*f*k1**2*k2**2*k3**2 + 7*beta12*f*k1**2*k3**4 + 7*beta14*gr1*k1**2*k2**4 - 14*beta14*gr1*k1**2*k2**2*k3**2 + 7*beta14*gr1*k1**2*k3**4 - 7*beta16*gr1*k1**2*k2**4 + 14*beta16*gr1*k1**2*k2**2*k3**2 - 7*beta16*gr1*k1**2*k3**4 - 3*beta6*f*k2**6 + 3*beta6*f*k2**2*k3**4 + beta7*f*k2**6 - beta7*f*k2**2*k3**4 + 4*ct**2*k1**2*k2**2*(2*f*gr2*k1**2 + f*(beta6 + 2*beta7)*(k2**2 + k3**2) + gr1**2*k1**2) + ct*k1*k2*(-7*beta11*f*k1**2*(k2**2 + k3**2) + 2*f*gr2*k1**2*(k2**2 - 7*k3**2) + f*(k2**2 + k3**2)*(beta6*k2**2 - 7*beta6*k3**2 + 9*beta7*k2**2 - 7*beta7*k3**2) + gr1**2*k1**2*(k2**2 - 7*k3**2)) - 6*f*gr2*k1**2*k2**4 + 6*f*gr2*k1**2*k2**2*k3**2 - 3*gr1**2*k1**2*k2**4 + 3*gr1**2*k1**2*k2**2*k3**2) + 7*k1**2*k2**2*(2*f*gr2 + gr1**2)*(b2*k3**2 + 2*ct**2*g2*k1**2 + 4*ct*g2*k1*k2 + 2*g2*(k2**2 - k3**2)))/(7*k1**2*k2**2*k3**4) + D1**4*Pk2*Pk3*mu**2*(7*b1**2*k2*(f*gr2*k1**4*(k2**2 + k3**2) + k3**2*(beta10*k2*(ct**2*k1**2*k2 - 2*ct*k1*k3**2 - k2**3 + k2*k3**2) + beta13*k1**4 + beta9*k1**4)) + b1*k1**2*(4*ct**2*k1**2*k2*(2*beta19*gr1*k2**2 + f*gr2*(k1**2 + 2*k2**2 + 2*k3**2) + f*k2**2*(beta6 + 2*beta7)) + ct*k1*(-7*beta11*f*k1**2*k2**2 + 7*beta15*gr1*k1**2*k2**2 + 9*beta19*gr1*k2**4 - 7*beta19*gr1*k2**2*k3**2 + beta6*f*k2**4 - 7*beta6*f*k2**2*k3**2 + 9*beta7*f*k2**4 - 7*beta7*f*k2**2*k3**2 + f*gr2*k1**2*k2**2 - 7*f*gr2*k1**2*k3**2 + 9*f*gr2*k2**4 + 2*f*gr2*k2**2*k3**2 - 7*f*gr2*k3**4) + k2*(-7*beta11*f*k1**2*k2**2 + 7*beta12*f*k1**2*(k2**2 + k3**2) - 7*beta14*gr1*k1**2*k3**2 + 7*beta15*gr1*k1**2*k2**2 - 7*beta16*gr1*k1**2*k2**2 + beta19*gr1*k2**4 - beta19*gr1*k2**2*k3**2 - 3*beta6*f*k2**4 + 3*beta6*f*k2**2*k3**2 + beta7*f*k2**4 - beta7*f*k2**2*k3**2 - 3*f*gr2*k1**2*k2**2 + 3*f*gr2*k1**2*k3**2 + f*gr2*k2**4 - f*gr2*k3**4)) + 7*f*gr2*k1**4*k2*(b2*k3**2 + 2*ct**2*g2*k1**2 + 4*ct*g2*k1*k2 + 2*g2*(k2**2 - k3**2)))/(7*k1**2*k2**3*k3**4)
    
    return (perm12+perm13+perm23)
    
    